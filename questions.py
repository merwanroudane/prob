import streamlit as st
import plotly.graph_objects as go
import plotly.express as px
import pandas as pd
import numpy as np
import networkx as nx

# ุชุนููู ุฅุนุฏุงุฏุงุช ุงูุตูุญุฉ
st.set_page_config(
	page_title="ูุฎุทุท ูุนุงูุฌุฉ ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ",
	page_icon="๐",
	layout="wide",
	initial_sidebar_state="expanded",
)

# ุชุนุฑูู CSS ููุงุชุฌุงู ูู ุงููููู ุฅูู ุงููุณุงุฑ
st.markdown("""
<style>
    .rtl {
        direction: rtl;
        text-align: right;
    }
    .sidebar .sidebar-content {
        direction: rtl;
    }
    h1, h2, h3, h4, h5, h6, p, div {
        direction: rtl;
        text-align: right;
    }
    .stButton button {
        font-family: 'Arial', sans-serif;
    }
    .stTabs [data-baseweb="tab-list"] {
        direction: rtl;
    }
    .stTabs [data-baseweb="tab-list"] button {
        font-family: 'Arial', sans-serif;
    }
    .main-header {
        font-size: 36px;
        font-weight: bold;
        color: #1E3D59;
        text-align: center;
        padding: 20px 0;
        background-color: #F5F5F5;
        border-radius: 10px;
        margin-bottom: 20px;
    }
    .sub-header {
        font-size: 28px;
        font-weight: bold;
        color: #2B6777;
        border-bottom: 2px solid #2B6777;
        padding-bottom: 10px;
        margin: 30px 0 20px 0;
    }
    .section-header {
        font-size: 22px;
        font-weight: bold;
        color: #006D77;
        margin: 20px 0 10px 0;
    }
    .note-box {
        background-color: #FFDDD2;
        border-left: 5px solid #E29578;
        padding: 15px;
        border-radius: 5px;
        margin: 20px 0;
    }
    .model-box {
        background-color: #E8F1F2;
        border-left: 5px solid #006D77;
        padding: 15px;
        border-radius: 5px;
        margin: 10px 0;
    }
    .highlight {
        color: #006D77;
        font-weight: bold;
    }
</style>
""", unsafe_allow_html=True)

# ุงูุนููุงู ุงูุฑุฆูุณู
st.markdown('<div class="main-header rtl">ูุฎุทุท ูุนุงูุฌุฉ ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ</div>', unsafe_allow_html=True)

# ุฅูุดุงุก ุงููุงุฆูุฉ ุงูุฌุงูุจูุฉ
st.sidebar.markdown('<h2 class="rtl">ุงูุฅุดูุงููุงุช ุงูููุงุณูุฉ</h2>', unsafe_allow_html=True)

# ุฅุถุงูุฉ ุฎูุงุฑุงุช ุงูุชููู ูู ุงููุงุฆูุฉ ุงูุฌุงูุจูุฉ
page = st.sidebar.radio(
	"ุงุฎุชุฑ ุงูุฅุดูุงููุฉ ููุนุฑุถ:",
	[
		"ูุธุฑุฉ ุนุงูุฉ",
		"ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ",
		"ุฅุดูุงููุฉ ุงูููุงุฑูุฉ",
		"ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช",
		"ุฅุดูุงููุฉ ุงูุณุจุจูุฉ",
		"ุฅุดูุงููุฉ ุงููุนุงููุฉ",
		"ุฅุดูุงููุฉ ุงูุชูุจุค",
		"ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ",
		"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ"
	]
)

# ุฅุถุงูุฉ ููุงุญุธุงุช ุฅูู ุงููุงุฆูุฉ ุงูุฌุงูุจูุฉ
st.sidebar.markdown('<div class="note-box rtl">', unsafe_allow_html=True)
st.sidebar.markdown("""
<h3>ููุงุญุธุงุช:</h3>
<ul>
    <li>ูุฐุง ุงููุฎุทุท ุฎุงุต ุจุงูุฅุดูุงููุงุช ุงูุนุงูุฉ ูููุณุช ุงูุฅุดูุงููุงุช ุงููุชุฎุตุตุฉ ูุซู ููุงุฐุฌ ุชุณุนูุฑ ุงูุฎูุงุฑุงุช ุงููุงููุฉ.</li>
    <li>ูุฐุง ุงููุฎุทุท ูุง ูุนูู ุฃูู ุดุงูู ููู ุงูุญุงูุงุชุ ูุฏ ุชููู ููุงู ุญุงูุงุช ุฃุฎุฑู.</li>
    <li>ูุฌุจ ุงูุงูุชุจุงู ูููููุงุช ุงูููุชุงุญูุฉ ูู ุงูุนูุงููู ูุฃููุง ุชูุนุจ ุฏูุฑ ูุจูุฑ ูู ุชูุฌูู ุงูุจุงุญุซ ููููุงูุฌ ุงูููุงุณุจุฉ.</li>
    <li>ูููุง ูุงูุช ุทุจูุนุฉ ุงููููุฐุฌ ุฅูุง ุฃูู ุฏููุง ูุจูู ูุญุฏูุฏ ูููุฐุง ุนูู ุงูุจุงุญุซ ุฃู ูุญุณู ูู ูููุฐุฌู.</li>
</ul>
""", unsafe_allow_html=True)
st.sidebar.markdown('</div>', unsafe_allow_html=True)


# ุฏุงูุฉ ูุฅูุดุงุก ูุฎุทุท ุดุจูู ููุฅุดูุงููุงุช
def create_network_chart():
	G = nx.DiGraph()

	# ุฅุถุงูุฉ ุงูุนูุฏ (ุงูุฅุดูุงููุงุช)
	issues = [
		"ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ", "ุฅุดูุงููุฉ ุงูููุงุฑูุฉ", "ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช",
		"ุฅุดูุงููุฉ ุงูุณุจุจูุฉ", "ุฅุดูุงููุฉ ุงููุนุงููุฉ", "ุฅุดูุงููุฉ ุงูุชูุจุค",
		"ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ", "ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ"
	]

	# ุฅุถุงูุฉ ุงูุนูุฏ ูุน ุฃููุงู ูุฎุชููุฉ
	node_colors = ["#FF9671", "#FFC75F", "#F9F871", "#D65DB1", "#845EC2", "#00C9A7", "#4D8076", "#4E8397"]
	for i, issue in enumerate(issues):
		G.add_node(issue, color=node_colors[i])

	# ุฅุถุงูุฉ ุงูุฑูุงุจุท
	G.add_edge("ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ", "ุฅุดูุงููุฉ ุงูุณุจุจูุฉ")
	G.add_edge("ุฅุดูุงููุฉ ุงูุณุจุจูุฉ", "ุฅุดูุงููุฉ ุงููุนุงููุฉ")
	G.add_edge("ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ", "ุฅุดูุงููุฉ ุงูููุงุฑูุฉ")
	G.add_edge("ุฅุดูุงููุฉ ุงูููุงุฑูุฉ", "ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช")
	G.add_edge("ุฅุดูุงููุฉ ุงูุชูุจุค", "ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ")
	G.add_edge("ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ", "ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ")
	G.add_edge("ุฅุดูุงููุฉ ุงูุณุจุจูุฉ", "ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ")
	G.add_edge("ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช", "ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ")

	# ุงุณุชุฎุฏุงู ุฎูุงุฑุฒููุฉ ุชุฎุทูุท spring_layout ูุชุญุฏูุฏ ููุงูุน ุงูุนูุฏ
	pos = nx.spring_layout(G, seed=42)

	# ุฅูุดุงุก ููุงุฆู ููุฑุณู
	edge_x = []
	edge_y = []
	for edge in G.edges():
		x0, y0 = pos[edge[0]]
		x1, y1 = pos[edge[1]]
		edge_x.extend([x0, x1, None])
		edge_y.extend([y0, y1, None])

	edge_trace = go.Scatter(
		x=edge_x, y=edge_y,
		line=dict(width=2, color='#888'),
		hoverinfo='none',
		mode='lines')

	node_x = []
	node_y = []
	node_colors = []
	node_text = []

	for node in G.nodes():
		x, y = pos[node]
		node_x.append(x)
		node_y.append(y)
		node_colors.append(G.nodes[node]['color'])
		node_text.append(node)

	node_trace = go.Scatter(
		x=node_x, y=node_y,
		mode='markers+text',
		hoverinfo='text',
		text=node_text,
		textposition="top center",
		marker=dict(
			showscale=False,
			color=node_colors,
			size=30,
			line_width=2))

	fig = go.Figure(data=[edge_trace, node_trace],
					layout=go.Layout(
						title="<b>ุงูุนูุงูุงุช ุจูู ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ</b>",
						titlefont_size=16,
						showlegend=False,
						hovermode='closest',
						margin=dict(b=20, l=5, r=5, t=40),
						xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
						yaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
						height=600,
						plot_bgcolor='rgba(0,0,0,0)'
					))

	fig.update_layout(
		font=dict(
			family="Arial",
			size=14,
		)
	)

	return fig


# ุฏุงูุฉ ูุฅูุดุงุก ูุฎุทุท ููููู ููููุงุฐุฌ
def create_model_hierarchy(category, models):
	fig = go.Figure(go.Treemap(
		labels=models,
		parents=[""] + [category] * (len(models) - 1),
		text=models,
		textinfo="label",
		hoverinfo="label+text",
		marker=dict(
			colorscale='Viridis',
			cmid=0.5
		),
	))

	fig.update_layout(
		title=f"<b>ุฃููุงุน ุงูููุงุฐุฌ ูู {category}</b>",
		font=dict(
			size=14,
			family="Arial"
		),
		margin=dict(t=50, l=25, r=25, b=25),
		height=400,
	)

	return fig


# ุฏุงูุฉ ูุฅูุดุงุก ูุฎุทุท ุนูููุฉ ุญู ุงูุฅุดูุงููุงุช
def create_process_flow(steps):
	# ุฅูุดุงุก ุงูุฃุณูู
	annotations = []
	for i in range(len(steps) - 1):
		annotations.append(dict(
			x=0.5,
			y=0.9 - i * 0.2,
			xref="paper",
			yref="paper",
			text="โ",
			showarrow=False,
			font=dict(size=24),
		))

	# ุฅูุดุงุก ุงููุฎุทุท
	fig = go.Figure()

	for i, step in enumerate(steps):
		fig.add_trace(go.Scatter(
			x=[0.5],
			y=[0.9 - i * 0.2 - 0.1],
			mode="markers+text",
			marker=dict(size=30, color=px.colors.qualitative.Plotly[i % len(px.colors.qualitative.Plotly)]),
			text=[step],
			textposition="middle center",
			textfont=dict(size=14),
			name=step
		))

	fig.update_layout(
		title="<b>ุฎุทูุงุช ูุนุงูุฌุฉ ุงูุฅุดูุงููุฉ</b>",
		showlegend=False,
		annotations=annotations,
		xaxis=dict(showgrid=False, zeroline=False, showticklabels=False, range=[0, 1]),
		yaxis=dict(showgrid=False, zeroline=False, showticklabels=False, range=[0, 1]),
		height=100 + 100 * len(steps),
		margin=dict(l=10, r=10, t=50, b=10),
		plot_bgcolor='rgba(0,0,0,0)'
	)

	return fig


# ุฏุงูุฉ ูุฅูุดุงุก ุฑุณู ุจูุงูู ุดุฑูุทู ูููุงุฑูุฉ ุงูููุงุฐุฌ
def create_model_comparison_chart(models, aspects):
	z_values = np.random.randint(1, 10, size=(len(models), len(aspects)))

	fig = go.Figure(data=go.Heatmap(
		z=z_values,
		x=aspects,
		y=models,
		colorscale='Viridis',
		colorbar=dict(title="ุงูุฃุฏุงุก"),
	))

	fig.update_layout(
		title="<b>ููุงุฑูุฉ ุจูู ุงูููุงุฐุฌ ููู ุฌูุงูุจ ูุฎุชููุฉ</b>",
		xaxis_title="ุงูุฌูุงูุจ",
		yaxis_title="ุงูููุงุฐุฌ",
		height=400,
		font=dict(
			family="Arial",
			size=14
		)
	)

	return fig


# ุนุฑุถ ุงููุญุชูู ุจูุงุกู ุนูู ุงูุตูุญุฉ ุงููุฎุชุงุฑุฉ
if page == "ูุธุฑุฉ ุนุงูุฉ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ูุธุฑุฉ ุนุงูุฉ ุนูู ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ</h2>

    <p>
    ุชูุงุฌู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ ูู ูุฌุงู ุงูุงูุชุตุงุฏ ูุงููุงููุฉ ูุงูุนููู ุงูุงุฌุชูุงุนูุฉ ุงูุนุฏูุฏ ูู ุงูุฅุดูุงููุงุช ุงููููุฌูุฉ ูุงูุชุญููููุฉ ุงูุชู ุชุคุซุฑ ุนูู ุฏูุฉ ุงููุชุงุฆุฌ ูููุซูููุชูุง. ููุฏู ูุฐุง ุงููุฎุทุท ุชุตูููุงู ูููุฌูุงู ููุฅุดูุงููุงุช ุงูุฑุฆูุณูุฉ ููุณุชุนุฑุถ ุงูููุงุฐุฌ ูุงูุฃุณุงููุจ ุงูููุงุณุจุฉ ููุนุงูุฌุฉ ูู ุฅุดูุงููุฉ.
    </p>

    <p>
    ุชุชุถูู ุงูุฅุดูุงููุงุช ุงูุฑุฆูุณูุฉ ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ:
    </p>

    <ol>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ</span>: ุชุชุนูู ุจุชุญุฏูุฏ ูููุงุณ ุงูุขุซุงุฑ ุงููุจุงุดุฑุฉ ูุบูุฑ ุงููุจุงุดุฑุฉ ูููุชุบูุฑุงุช.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงูููุงุฑูุฉ</span>: ุชุชุนูู ุจุงูููุงุฑูุฉ ุจูู ุงูููุงุฐุฌ ุฃู ุงููุนููุงุช ุฃู ุงููุชุงุฆุฌ.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช</span>: ุชุชุนูู ุจุชุญุฏูุฏ ุงูุนูุงูู ุงูุฃูุซุฑ ุชุฃุซูุฑุงู ูู ุงูุธุงูุฑุฉ ุงููุฏุฑูุณุฉ.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงูุณุจุจูุฉ</span>: ุชุชุนูู ุจุชุญุฏูุฏ ุงูุนูุงูุงุช ุงูุณุจุจูุฉ ุจูู ุงููุชุบูุฑุงุช.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงููุนุงููุฉ</span>: ุชุชุนูู ุจููุงุณ ูุนุงููุฉ ุงูุณูุงุณุงุช ุฃู ุงูุชุฏุฎูุงุช.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงูุชูุจุค</span>: ุชุชุนูู ุจุงููุฏุฑุฉ ุนูู ุงูุชูุจุค ุจุงููุณุชูุจู ุงูุทูุงูุงู ูู ุงูุจูุงูุงุช ุงููุชุงุญุฉ.</li>
        <li><span class="highlight">ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ</span>: ุชุชุนูู ุจุชุญููู ุงูุนูุงูุงุช ูู ุงูุขุฌุงู ุงููุฎุชููุฉ.</li>
        <li><span class="highlight">ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ</span>: ุชุชุนูู ุจุงูุฌูุน ุจูู ุนุฏุฉ ุฅุดูุงููุงุช ุฃู ููุงุฐุฌ.</li>
    </ol>

    <p>
    ูุฌุจ ุนูู ุงูุจุงุญุซ ุงุฎุชูุงุฑ ุงูููุงุฐุฌ ูุงูุฃุณุงููุจ ุงูููุงุณุจุฉ ุจูุงุกู ุนูู ุทุจูุนุฉ ุงูุฅุดูุงููุฉ ุงููุทุฑูุญุฉุ ูุน ุงูุฃุฎุฐ ุจุนูู ุงูุงุนุชุจุงุฑ ุฎุตุงุฆุต ุงูุจูุงูุงุช ุงููุชุงุญุฉ ูุงููุฏู ูู ุงูุฏุฑุงุณุฉ.
    </p>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุงูุนูุงูุงุช ุจูู ุงูุฅุดูุงููุงุช
	st.plotly_chart(create_network_chart(), use_container_width=True)

	# ุฃูุซูุฉ ูููููุฌูุงุช ุงูุดุงุฆุนุฉ
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฃูุซูุฉ ูููููุฌูุงุช ุงูุดุงุฆุนุฉ ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ</h3>
    <div class="model-box">
    <ul>
        <li>ูููุฐุฌ ุงูุงูุญุฏุงุฑ ุจุงููุฑููุ ECMุ VECMุ VARุ ูููุฌูุฉ ARDL Bound testุ SVARุ SVECMุ ุฅูุฎ...</li>
        <li>ููุงุฐุฌ ุงูุงุณุชุฏูุงู ุงูุณุจุจู: Causal impact modelุ Causal varุ Causal arimaุ Causal inference</li>
        <li>ุฎูุงุฑุฒููุงุช ุงูุชุนูู ุงูุขูู: ุทุฑู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุชุ ุงูุบุงุจุฉ ุงูุนุดูุงุฆูุฉุ ุงูุดุจูุงุช ุงูุนุตุจูุฉ ุงูุนูููุฉ</li>
        <li>ุงูููุงุฐุฌ ุงูุฏููุงููููุฉ: ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงููููุ ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงูููุฒุนุ ููุงุฐุฌ ุฐุงุช ุงููุนุงููุงุช ุงููุชุบูุฑุฉ</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

elif page == "ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ</h2>

    <p>
    ุชูุนูู ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ ุจุฏุฑุงุณุฉ ูููุงุณ ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุช ูุชุญุฏูุฏ ุญุฌู ูุทุจูุนุฉ ุงูุชุฃุซูุฑุงุช ุจูููุง. ุชุชุนุฏุฏ ุฃููุงุน ุงูุชุฃุซูุฑุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉุ ููุง ูุชุทูุจ ุงุฎุชูุงุฑ ุงูููุงุฐุฌ ุงูููุงุณุจุฉ ููู ููุน.
    </p>

    <h3 class="section-header">ุฃููุงุน ุงูุชุฃุซูุฑ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ูุฎุทุท ูุฃููุงุน ุงูุชุฃุซูุฑ
	impact_types = [
		"ุงูุชุฃุซูุฑ",
		"ุงูุชุฃุซูุฑ ุงูุณุงูู", "ุงูุชุฃุซูุฑ ุงูุฏููุงูููู", "ุงูุชุฃุซูุฑ ุบูุฑ ุงููุจุงุดุฑ", "ุงูุชุฃุซูุฑ ุงูุบูุฑ ูุชุนูู ุจุงููุชูุณุท"
	]
	dynamic_types = [
		"ุงูุชุฃุซูุฑ ุงูุฏููุงูููู",
		"ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงูููุฒุน", "ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงูููู",
		"ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุฐู ุงููุนุงููุงุช ุงููุชุบูุฑุฉ", "ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงููุจูู ุนูู ุงูุชููุนุงุช"
	]

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ุงูุชุฃุซูุฑ
	st.plotly_chart(create_model_hierarchy("ุงูุชุฃุซูุฑ", impact_types), use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ุงูุชุฃุซูุฑ ุงูุฏููุงูููู
	st.plotly_chart(create_model_hierarchy("ุงูุชุฃุซูุฑ ุงูุฏููุงูููู", dynamic_types), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุงูููุงุฐุฌ ุงููุณุชุฎุฏูุฉ ูู ุชุญููู ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ:</h3>

    <h4>1. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุณุงูู:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงูุซุงุจุชุฉ ุนุจุฑ ุงูุฒููุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ุงูุงูุญุฏุงุฑ ุงูุฎุทู ุงูุจุณูุท ูุงููุชุนุฏุฏ</li>
        <li>ููุงุฐุฌ ูุชุนุฏุฏุฉ ุงููุนุงุฏูุงุช</li>
        <li>ููุงุฐุฌ ุงูุจูุงูุงุช ุงูููุทุนูุฉ Cross-sectional data</li>
    </ul>
    </div>

    <h4>2. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงูููู:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงููุชุบูุฑุฉ ุนุจุฑ ุงูุฒููุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ููุงุฐุฌ ุงูุงูุญุฏุงุฑ ุจุงููุฑูู (Differenced Regression)</li>
        <li>ููุงุฐุฌ ุชุตุญูุญ ุงูุฎุทุฃ (ECM)</li>
        <li>ููุงุฐุฌ ูุชุฌู ุชุตุญูุญ ุงูุฎุทุฃ (VECM)</li>
        <li>ููุงุฐุฌ ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู ุฐู ุงููุฌูุงุช ุงูููุฒุนุฉ (ARDL)</li>
        <li>ููุงุฐุฌ ูุชุฌู ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู (VAR)</li>
    </ul>
    </div>

    <h4>3. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงูููุฒุน:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงูููุฒุนุฉ ุนุจุฑ ูุชุฑุงุช ุฒูููุฉ ูุชุนุฏุฏุฉุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ูููุฐุฌ ุงููุฌูุงุช ุงูููุฒุนุฉ (DL)</li>
        <li>ูููุฐุฌ ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู ุฐู ุงููุฌูุงุช ุงูููุฒุนุฉ (ARDL)</li>
        <li>ูููุฐุฌ ุงููุฌูุงุช ุงูููุฒุนุฉ ุงููุชุนุฏุฏุฉ (PDL)</li>
        <li>ูููุฐุฌ ุงููุฌูุงุช ุงูููุฒุนุฉ ุงูุนุงูุฉ (GDL)</li>
    </ul>
    </div>

    <h4>4. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุฐู ุงููุนุงููุงุช ุงููุชุบูุฑุฉ:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงูุชู ุชุชุบูุฑ ูุนุงููุงุชูุง ุนุจุฑ ุงูุฒููุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ุนุงุฆูุฉ ููุงุฐุฌ ุงููุนุงููุงุช ุงููุชุบูุฑุฉ ุฒูููุงู (Time-varying parameters)</li>
        <li>ููุงุฐุฌ ุงูุชุญูู ุงูููููู (Structural break models)</li>
        <li>ููุงุฐุฌ ุงูุชุจุฏูู ุงููุงุฑูููู (Markov switching models)</li>
    </ul>
    </div>

    <h4>5. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุฏููุงูููู ุงููุจูู ุนูู ุงูุชููุนุงุช:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงููุจููุฉ ุนูู ุชููุนุงุช ุงูุฃูุฑุงุฏ ูุงููุคุณุณุงุชุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ููุงุฐุฌ ุงูุชููุนุงุช ุงูููููุฉ ูุงูุฑุดูุฏุฉ</li>
        <li>ููุงุฐุฌ ุงูุชููุนุงุช ุงูุฑุดูุฏุฉ ุงููุญุฏูุฏุฉ</li>
        <li>ููุงุฐุฌ ุงูุชุนูู ุงูุชูููู (Adaptive learning)</li>
    </ul>
    </div>

    <h4>6. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุบูุฑ ุงููุจุงุดุฑ:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุงูุชู ุชุชู ุนุจุฑ ูุชุบูุฑุงุช ูุณูุทุฉุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ููุงุฐุฌ ุชุญููู ุงููุณุงุฑ ุงูุณุงูู ูุงูุฏููุงูููู</li>
        <li>ููุงุฐุฌ ุงููุนุงุฏูุงุช ุงูุจูุงุฆูุฉ (SEM)</li>
        <li>ููุงุฐุฌ ุงููุณุงุทุฉ (Mediation models)</li>
    </ul>
    </div>

    <h4>7. ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงูุบูุฑ ูุชุนูู ุจุงููุชูุณุท:</h4>
    <div class="model-box">
    <p>
    ุชุณุชุฎุฏู ูููุงุณ ุงูุชุฃุซูุฑุงุช ุนูู ุฌูุงูุจ ุฃุฎุฑู ูู ุงูุชูุฒูุน ุบูุฑ ุงููุชูุณุทุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ุงูุญุฏุงุฑ ุงููููุงุช (Quantile regression)</li>
        <li>ุงูุญุฏุงุฑ ุงููููุงุช ุฐู ุงููุฌูุงุช ุงูููุฒุนุฉ (Quantile ARDL)</li>
        <li>ูููุงุช ูู ูููุงุช (Quantile in quantile)</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุนูููุฉ ุงุฎุชูุงุฑ ุงููููุฐุฌ ุงูููุงุณุจ
	steps = [
		"ุชุญุฏูุฏ ููุน ุงูุชุฃุซูุฑ ุงููุฑุงุฏ ุฏุฑุงุณุชู",
		"ูุญุต ุฎุตุงุฆุต ุงูุจูุงูุงุช",
		"ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฑูุฉ ุงูุณูุงุณู ุงูุฒูููุฉ",
		"ุชุญุฏูุฏ ุงููููุฐุฌ ุงูููุงุณุจ",
		"ุชูุฏูุฑ ุงููููุฐุฌ ููุญุต ุงูุฌูุฏุฉ",
		"ุชูุณูุฑ ุงููุชุงุฆุฌ ูุชุญููููุง"
	]
	st.plotly_chart(create_process_flow(steps), use_container_width=True)

elif page == "ุฅุดูุงููุฉ ุงูููุงุฑูุฉ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงูููุงุฑูุฉ</h2>

    <p>
    ุชุชุนูู ุฅุดูุงููุฉ ุงูููุงุฑูุฉ ุจุงูููุงุฑูุฉ ุจูู ุงูููุงุฐุฌ ุฃู ุงููุนููุงุช ุฃู ุงููุชุงุฆุฌ ุฃู ุจูู ูุฌููุนุงุช ูุฎุชููุฉ (ุฏููุ ูุทุงุนุงุชุ ูุคุณุณุงุชุ ุฅูุฎ). ุชุชุทูุจ ูุฐู ุงูุฅุดูุงููุฉ ุงุฎุชูุงุฑ ูููุฌูุงุช ููุงุณุจุฉ ุชุถูู ุงูููุงุฑูุฉ ุงูุนุงุฏูุฉ ูุงูููุถูุนูุฉ.
    </p>

    <h3 class="section-header">ุฃููุงุน ุงูููุงุฑูุงุช:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ูุฎุทุท ูุฃููุงุน ุงูููุงุฑูุฉ
	comparison_types = [
		"ุงูููุงุฑูุฉ",
		"ุงูููุงุฑูุฉ ุจุงูููุงุฐุฌ", "ุงูููุงุฑูุฉ ุงููุตููุฉ"
	]

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ุงูููุงุฑูุฉ
	st.plotly_chart(create_model_hierarchy("ุงูููุงุฑูุฉ", comparison_types), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ูููุฌูุงุช ุงูููุงุฑูุฉ:</h3>

    <h4>1. ุงูููุงุฑูุฉ ุจุงูููุงุฐุฌ:</h4>
    <div class="model-box">
    <p>
    ุชุชุถูู ุงูููุงุฑูุฉ ุจูู ููุงุฐุฌ ูุฎุชููุฉ ุฃู ูุฌููุนุงุช ูุฎุชููุฉ ุจุงุณุชุฎุฏุงู ุงูููุงุฐุฌ ุงูููุงุณูุฉุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ุงูููุงุฑูุฉ ุจุงููุนููุงุช ุชุญุช ุดุฑูุท ูุนููุฉ</li>
        <li>ุงูููุงุฑูุฉ ุจุงูุฎุตุงุฆุต ุงูุงุญุชูุงููุฉ ููููุงุฐุฌ</li>
        <li>ุงูููุงุฑูุฉ ุจุงูุฃูุฏุงู ุงูููุงุฆูุฉ</li>
        <li>ููุงุฐุฌ ุงูุจุงูู ูุน ุงุณุชุฎุฑุงุฌ ุงูุขุซุงุฑ ุงููุฑุฏูุฉ</li>
        <li>ููุงุฐุฌ ุงููุทุงุนุงุช (Sectoral models)</li>
        <li>ููุงุฐุฌ ุงูุณูุงุณู ุงูุฒูููุฉ ุงููุชุดุงุจูุฉ</li>
        <li>ููุงุฐุฌ ุงูุฏูู ุงููุชูุงุทุนุฉ (Cross-country analysis)</li>
        <li>ููุงุฐุฌ ุงูุดุจูุงุช (Network Model)</li>
        <li>ุจูุงูุงุช ุงูุจุงูู ุงูุดุจููุฉ (Network Panel Data)</li>
        <li>ููุงุฐุฌ ูุชุฌู ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู ุงูุนุงูููุฉ (GVAR)</li>
        <li>ุชุญููู ูุจู ูุจุนุฏ (Before After Analysis)</li>
    </ul>
    </div>

    <h4>2. ุงูููุงุฑูุฉ ุงููุตููุฉ:</h4>
    <div class="model-box">
    <p>
    ุชุนุชูุฏ ุนูู ุงูุฅุญุตุงุก ุงููุตูู ูุงูุชุญููู ุงูุจุตุฑู ููุจูุงูุงุชุ ููู ุฃูุซูุชูุง:
    </p>
    <ul>
        <li>ููุงุฑูุฉ ุจุงุณุชุฎุฏุงู ูุคุดุฑุงุช ุงูุฅุญุตุงุก ุงููุตูู ูุซู ูุนุงูู ุงูุงุฎุชูุงู</li>
        <li>ููุงุฑูุฉ ุจุงูููุงุฑุจุงุช ุงูุงุญุชูุงููุฉ</li>
        <li>ุงุณุชุฎุฏุงู ุฃุฏูุงุช ุชุตูุฑ ุงูุจูุงูุงุช (Data Visualization)</li>
        <li>ูุฎุทุทุงุช ุงูุตูุงุฏูู (Box plots)</li>
        <li>ูุฎุทุทุงุช ุงูุงูุชุดุงุฑ (Scatter plots)</li>
        <li>ุฎุฑุงุฆุท ุงูุญุฑุงุฑุฉ (Heat maps)</li>
    </ul>
    </div>

    <h3 class="section-header">ุฃูู ุงูุงุฎุชุจุงุฑุงุช ุงูุฅุญุตุงุฆูุฉ ุงููุณุชุฎุฏูุฉ ูู ุงูููุงุฑูุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ุงุฎุชุจุงุฑ t ููููุงุฑูุฉ ุจูู ูุชูุณุทูู</li>
        <li>ุชุญููู ุงูุชุจุงูู (ANOVA) ููููุงุฑูุฉ ุจูู ุนุฏุฉ ูุฌููุนุงุช</li>
        <li>ุงุฎุชุจุงุฑ Hausman ููููุงุฑูุฉ ุจูู ููุงุฐุฌ ุงูุจุงูู</li>
        <li>ุงุฎุชุจุงุฑ ูุณุจุฉ ุงูุฃุฑุฌุญูุฉ (Likelihood Ratio Test)</li>
        <li>ูุนุงููุฑ ุงููุนูููุงุช (AIC, BIC, HQ) ููููุงุฑูุฉ ุจูู ุงูููุงุฐุฌ</li>
        <li>ุงุฎุชุจุงุฑ Diebold-Mariano ููููุงุฑูุฉ ุจูู ุฏูุฉ ุงูุชูุจุคุงุช</li>
        <li>ุงุฎุชุจุงุฑ J ูููุงุฑูุฉ ุงูููุงุฐุฌ ุงููุชุฏุงุฎูุฉ</li>
        <li>ุงุฎุชุจุงุฑ Davidson-MacKinnon ููููุงุฑูุฉ ุจูู ุงูููุงุฐุฌ ุบูุฑ ุงููุชุฏุงุฎูุฉ</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ูุฎุทุท ููุงุฑูุฉ ุงูููุงุฐุฌ
	models = ["ูููุฐุฌ ุงูุญุฏุงุฑ ุฎุทู", "ูููุฐุฌ VAR", "ูููุฐุฌ ARDL", "ูููุฐุฌ ECM", "ูููุฐุฌ GARCH"]
	aspects = ["ุฏูุฉ ุงูุชูุจุค", "ุงููุฏุฑุฉ ุงูุชูุณูุฑูุฉ", "ุณูููุฉ ุงูุชูุณูุฑ", "ุชุนููุฏ ุงููููุฐุฌ", "ุงููุฑููุฉ"]

	st.plotly_chart(create_model_comparison_chart(models, aspects), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฎุทูุงุช ุฅุฌุฑุงุก ุงูููุงุฑูุฉ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุงูููุงุฑูุฉ
	comparison_steps = [
		"ุชุญุฏูุฏ ุงููุฏู ูู ุงูููุงุฑูุฉ",
		"ุงุฎุชูุงุฑ ุงููุฌููุนุงุช ุฃู ุงูููุงุฐุฌ ููููุงุฑูุฉ",
		"ุชุญุฏูุฏ ูุนุงููุฑ ุงูููุงุฑูุฉ",
		"ุงุฎุชูุงุฑ ุงููููุฌูุฉ ุงูููุงุณุจุฉ",
		"ุฌูุน ูุชุญููู ุงูุจูุงูุงุช",
		"ุฅุฌุฑุงุก ุงูุงุฎุชุจุงุฑุงุช ุงูุฅุญุตุงุฆูุฉ ุงูููุงุณุจุฉ",
		"ุชูุณูุฑ ุงููุชุงุฆุฌ ูุงุณุชุฎูุงุต ุงูุงุณุชูุชุงุฌุงุช"
	]

	st.plotly_chart(create_process_flow(comparison_steps), use_container_width=True)

elif page == "ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช</h2>

    <p>
    ุชุชุนูู ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช ุจุชุญุฏูุฏ ุงูุนูุงูู ุงูุฃูุซุฑ ุชุฃุซูุฑุงู ูู ุงูุธุงูุฑุฉ ุงููุฏุฑูุณุฉ ูุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช ุงูููุงุณุจุฉ ูููููุฐุฌ. ุชุนุชุจุฑ ูุฐู ุงูุฅุดูุงููุฉ ุฃุณุงุณูุฉ ูู ุจูุงุก ุงูููุงุฐุฌ ุงูููุงุณูุฉ ุงููุนุงูุฉ ูุงูุชู ุชุชุณู ุจุงููุฏุฑุฉ ุงูุชูุณูุฑูุฉ ุงูุนุงููุฉ.
    </p>

    <h3 class="section-header">ุทุฑู ุชุญุฏูุฏ ูุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช:</h3>
    <div class="model-box">
    <ul>
        <li>ูููุฐุฌ ุงูุงูุญุฏุงุฑ ุงููุนูุงุฑู (Standard Regression)</li>
        <li>ุทุฑู ุงูุฃูููุฉ ุงููุณุจูุฉ (Relative Importance)</li>
        <li>ุฎูุงุฑุฒููุงุช ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช (Variable Selection Methods):
            <ul>
                <li>ุงูุงุฎุชูุงุฑ ุงูุชุฏุฑูุฌู (Stepwise Selection)</li>
                <li>ุงูุงุฎุชูุงุฑ ุงูุฃูุงูู (Forward Selection)</li>
                <li>ุงูุงุณุชุจุนุงุฏ ุงูุฎููู (Backward Elimination)</li>
                <li>ุทุฑููุฉ LASSO</li>
                <li>ุทุฑููุฉ Ridge Regression</li>
                <li>ุทุฑููุฉ Elastic Net</li>
            </ul>
        </li>
        <li>ุงูููุฐุฌุฉ ุงูุฃูุชููุงุชูููุฉ (Automatic Modeling)</li>
        <li>ุชุญููู ุงูุชุญูู (Control Analysis)</li>
        <li>ุฎูุงุฑุฒููุงุช ุงูุบุงุจุฉ ุงูุนุดูุงุฆูุฉ (Random Forest Algorithms)</li>
        <li>ุฎูุงุฑุฒููุงุช ุงููุฑููุงุช (Difference Algorithms)</li>
        <li>ุฎูุงุฑุฒููุงุช ุงุฎุชูุงุฑ ุงููุชุบูุฑ ููุชุนูู ุงูุนููู (Variable Selection for Deep Learning)</li>
        <li>ุฎูุงุฑุฒููุงุช ุงูุชุตููู ูุจู ุงูููุฐุฌุฉ (Classification Algorithms)</li>
    </ul>
    </div>

    <h3 class="section-header">ุทุฑู ุชูููู ุฃูููุฉ ุงููุชุบูุฑุงุช:</h3>
    <div class="model-box">
    <ul>
        <li>ูููุฉ ุงููุนุงูู ููุนูููุชู ุงูุฅุญุตุงุฆูุฉ (Coefficient magnitude and significance)</li>
        <li>ููุงููุณ ุงูุฃูููุฉ ุงููุณุจูุฉ (Measures of relative importance):
            <ul>
                <li>ุชุฌุฒุฆุฉ Rยฒ (Rยฒ decomposition)</li>
                <li>ุชุญููู ุงูุญุณุงุณูุฉ (Sensitivity analysis)</li>
                <li>ูุนุงููุงุช ุงููุฑููุฉ (Elasticity coefficients)</li>
            </ul>
        </li>
        <li>ุฃูููุฉ ุงููุชุบูุฑ ูู ููุงุฐุฌ ุงูุชุนูู ุงูุขูู:
            <ul>
                <li>ุฃูููุฉ Gini (Gini importance)</li>
                <li>ุฃูููุฉ Permutation (Permutation importance)</li>
                <li>ููู Shapley (Shapley values)</li>
            </ul>
        </li>
        <li>ุชุญููู ุงูููููุงุช ุงูุฑุฆูุณูุฉ (Principal Component Analysis - PCA)</li>
        <li>ุชุญููู ุงูุนูุงูู (Factor Analysis)</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุถุญ ุนูููุฉ ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช
	var_selection_steps = [
		"ุชุญุฏูุฏ ุงููุชุบูุฑุงุช ุงููุญุชููุฉ ุจูุงุกู ุนูู ุงููุธุฑูุฉ",
		"ูุญุต ุงูุจูุงูุงุช ูุฅุนุฏุงุฏูุง",
		"ุชุทุจูู ุฎูุงุฑุฒููุงุช ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช",
		"ุชูููู ุฃูููุฉ ุงููุชุบูุฑุงุช",
		"ุงุฎุชุจุงุฑ ุงููููุฐุฌ ูุน ุงููุชุบูุฑุงุช ุงููุฎุชุงุฑุฉ",
		"ุงูุชุญูู ูู ุงุณุชูุฑุงุฑ ุงููุชุงุฆุฌ",
		"ุชูุณูุฑ ุฏูุฑ ุงููุชุบูุฑุงุช ุงููุฎุชุงุฑุฉ"
	]

	st.plotly_chart(create_process_flow(var_selection_steps), use_container_width=True)

	# ุฅูุดุงุก ุฑุณู ุจูุงูู ูุทุฑู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช
	variable_selection_methods = [
		"ุทุฑู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช",
		"ุงูุทุฑู ุงูุฅุญุตุงุฆูุฉ ุงูุชูููุฏูุฉ", "ุทุฑู ุงูุชุนูู ุงูุขูู", "ุทุฑู ุงูุชุนูู ุงูุนููู", "ุงูุทุฑู ุงููุฌููุฉ"
	]

	traditional_methods = [
		"ุงูุทุฑู ุงูุฅุญุตุงุฆูุฉ ุงูุชูููุฏูุฉ",
		"ุงูุงูุญุฏุงุฑ ุงูุชุฏุฑูุฌู", "ุงุฎุชุจุงุฑุงุช ุงููุนูููุฉ", "ูุนุงููุฑ ุงููุนูููุงุช", "ุชุญููู ุงูููููุงุช ุงูุฑุฆูุณูุฉ"
	]

	machine_learning_methods = [
		"ุทุฑู ุงูุชุนูู ุงูุขูู",
		"ุงูุบุงุจุฉ ุงูุนุดูุงุฆูุฉ", "LASSO", "Ridge Regression", "Elastic Net", "Gradient Boosting"
	]

	# ุนุฑุถ ูุฎุทุท ุทุฑู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช
	st.plotly_chart(create_model_hierarchy("ุทุฑู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช", variable_selection_methods),
					use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุงูุทุฑู ุงูุฅุญุตุงุฆูุฉ ุงูุชูููุฏูุฉ
	st.plotly_chart(create_model_hierarchy("ุงูุทุฑู ุงูุฅุญุตุงุฆูุฉ ุงูุชูููุฏูุฉ", traditional_methods), use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุทุฑู ุงูุชุนูู ุงูุขูู
	st.plotly_chart(create_model_hierarchy("ุทุฑู ุงูุชุนูู ุงูุขูู", machine_learning_methods), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุงุนุชุจุงุฑุงุช ูููุฉ ุนูุฏ ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช:</h3>
    <div class="model-box">
    <ul>
        <li>ุงูุฃุณุงุณ ุงููุธุฑู: ูุฌุจ ุฃู ูููู ููุงู ูุจุฑุฑ ูุธุฑู ูุฅุฏุฑุงุฌ ุงููุชุบูุฑ ูู ุงููููุฐุฌ.</li>
        <li>ุชุฌูุจ ุงูุงุฑุชุจุงุท ุงููุชุนุฏุฏ: ูุฌุจ ุชุฌูุจ ุฅุฏุฑุงุฌ ูุชุบูุฑุงุช ูุฑุชุจุทุฉ ุจุดูู ูุจูุฑ ูููุง ุจูููุง.</li>
        <li>ูุดููุฉ ุงูุฃุจุนุงุฏ ุงูุนุงููุฉ: ุนูุฏูุง ูููู ุนุฏุฏ ุงููุชุบูุฑุงุช ูุจูุฑุงู ููุงุฑูุฉ ุจุนุฏุฏ ุงููุดุงูุฏุงุช.</li>
        <li>ุชูุงุฒู ุงููููุฐุฌ: ุงููููุฐุฌ ูุฌุจ ุฃู ูููู ุจุณูุทุงู ุจูุง ูููู ููุชูุณูุฑ ููุนูุฏุงู ุจูุง ูููู ููุฏูุฉ.</li>
        <li>ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฑ: ูุฌุจ ุฃู ุชููู ูุชุงุฆุฌ ุงููููุฐุฌ ูุณุชูุฑุฉ ุนุจุฑ ุงูุนููุงุช ุงููุฎุชููุฉ.</li>
        <li>ุงูุชุญูุฒ ูู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช: ุชุฌูุจ ุงูุชุญูุฒ ุงููุงุชุฌ ุนู ุงุฎุชูุงุฑ ุงููุชุบูุฑุงุช ุจูุงุกู ุนูู ุงููุชุงุฆุฌ.</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

elif page == "ุฅุดูุงููุฉ ุงูุณุจุจูุฉ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงูุณุจุจูุฉ</h2>

    <p>
    ุชุนุชุจุฑ ุฅุดูุงููุฉ ุงูุณุจุจูุฉ ูู ุฃูู ูุฃุตุนุจ ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉุ ุญูุซ ุชุชุนูู ุจุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ููุงู ุนูุงูุฉ ุณุจุจูุฉ ุจูู ุงููุชุบูุฑุงุช ูููุณ ูุฌุฑุฏ ุงุฑุชุจุงุท. ุงูุงุฑุชุจุงุท ุจูู ูุชุบูุฑูู ูุง ูุนูู ุจุงูุถุฑูุฑุฉ ูุฌูุฏ ุนูุงูุฉ ุณุจุจูุฉุ ููุฐูู ุชู ุชุทููุฑ ุนุฏุฉ ูููุฌูุงุช ูุงุฎุชุจุงุฑ ูุชุญููู ุงูุนูุงูุงุช ุงูุณุจุจูุฉ.
    </p>

    <h3 class="section-header">ุฃููุงุน ุงูุณุจุจูุฉ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ูุฎุทุท ูุฃููุงุน ุงูุณุจุจูุฉ
	causality_types = [
		"ุงูุณุจุจูุฉ",
		"ุงูุณุจุจูุฉ ุงูุฅุญุตุงุฆูุฉ", "ุงูุณุจุจูุฉ ุงูููุฏุณูุฉ"
	]

	statistical_causality = [
		"ุงูุณุจุจูุฉ ุงูุฅุญุตุงุฆูุฉ",
		"ุณุจุจูุฉ ุบุฑุงูุฌุฑ", "ุณุจุจูุฉ ุณููุฒ", "ุณุจุจูุฉ ุจูุฑู", "ุณุจุจูุฉ ุฑูุจู", "ุณุจุจูุฉ ุงููุชุบูุฑุงุช ุงูุฃุฏุงุชูุฉ"
	]

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ุงูุณุจุจูุฉ
	st.plotly_chart(create_model_hierarchy("ุงูุณุจุจูุฉ", causality_types), use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ุงูุณุจุจูุฉ ุงูุฅุญุตุงุฆูุฉ
	st.plotly_chart(create_model_hierarchy("ุงูุณุจุจูุฉ ุงูุฅุญุตุงุฆูุฉ", statistical_causality), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ูููุฌูุงุช ูุงุฎุชุจุงุฑุงุช ุงูุณุจุจูุฉ:</h3>

    <h4>1. ุงุฎุชุจุงุฑุงุช ุงูุณุจุจูุฉ:</h4>
    <div class="model-box">
    <ul>
        <li>ุงุฎุชุจุงุฑ ุบุฑุงูุฌุฑ ููุณุจุจูุฉ (Granger Causality Test):
            <ul>
                <li>ูุฎุชุจุฑ ูุง ุฅุฐุง ูุงู ูุชุบูุฑ ูุง ูุณุงุนุฏ ูู ุงูุชูุจุค ุจูุชุบูุฑ ุขุฎุฑ</li>
                <li>ูุนุชูุฏ ุนูู ููุงุฐุฌ VAR ุฃู VECM</li>
            </ul>
        </li>
        <li>ุงุฎุชุจุงุฑ ุณููุฒ ููุณุจุจูุฉ (Sims Causality Test)</li>
        <li>ุงุฎุชุจุงุฑ ุชูุฏุง-ูุงูุงูุชู (Toda-Yamamoto Test):
            <ul>
                <li>ูุชุบูุจ ุนูู ูุดููุฉ ุงุณุชูุฑุงุฑูุฉ ุงูุณูุงุณู ุงูุฒูููุฉ</li>
            </ul>
        </li>
        <li>ุงุฎุชุจุงุฑ ุงูุณุจุจูุฉ ุบูุฑ ุงูุฎุทูุฉ (Nonlinear Causality Test)</li>
        <li>ุงุฎุชุจุงุฑ ุงูุณุจุจูุฉ ูู ุงููุฏู ุงูุทููู ูุงููุตูุฑ</li>
    </ul>
    </div>

    <h4>2. ููุงุฐุฌ ุงูุณุจุจูุฉ:</h4>
    <div class="model-box">
    <ul>
        <li>ููุงุฐุฌ ุงูุฑุณูู ุงูุจูุงููุฉ ุงูููุฌูุฉ ุบูุฑ ุงูุฏูุฑูุฉ (Directed Acyclic Graph - DAG):
            <ul>
                <li>ุชูุซู ุงูุนูุงูุงุช ุงูุณุจุจูุฉ ุจูู ุงููุชุบูุฑุงุช ุจุดูู ุจูุงูู</li>
                <li>ุชุณูุญ ุจุชุญุฏูุฏ ุงููุณุงุฑุงุช ุงูุณุจุจูุฉ ุงููุจุงุดุฑุฉ ูุบูุฑ ุงููุจุงุดุฑุฉ</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุดุจูุฉ (Network Model):
            <ul>
                <li>ุชูุซูู ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุช ุนูู ุดูู ุดุจูุฉ</li>
                <li>ุชุณูุญ ุจุชุญููู ุชุฏูู ุงูุชุฃุซูุฑุงุช ุนุจุฑ ุงูุดุจูุฉ</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงููุนุงุฏูุงุช ุงูุจูุงุฆูุฉ (Structural Equation Models - SEM):
            <ul>
                <li>ุชุฌูุน ุจูู ููุงุฐุฌ ุงูููุงุณ ูููุงุฐุฌ ุงูุนูุงูุงุช ุงูุณุจุจูุฉ</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุงุณุชุฏูุงู ุงูุณุจุจู (Causal Inference Models):
            <ul>
                <li>Causal Impact Model</li>
                <li>Causal VAR</li>
                <li>Causal ARIMA</li>
            </ul>
        </li>
    </ul>
    </div>

    <h4>3. ุทุฑู ุงูุชุญููู ุงูุณุจุจู:</h4>
    <div class="model-box">
    <ul>
        <li>ุทุฑููุฉ ุงููุชุบูุฑุงุช ุงูุฃุฏุงุชูุฉ (Instrumental Variables):
            <ul>
                <li>ุชุณุชุฎุฏู ูุชุบูุฑุงู ุฃุฏุงุชูุงู ูุฑุชุจุทุงู ุจุงููุชุบูุฑ ุงููุณุชูู ูููุณ ูู ุชุฃุซูุฑ ูุจุงุดุฑ ุนูู ุงููุชุบูุฑ ุงูุชุงุจุน</li>
            </ul>
        </li>
        <li>ุทุฑููุฉ ุงููุฑูู ูู ุงููุฑูู (Difference-in-Differences):
            <ul>
                <li>ุชูุงุฑู ุงูุชุบููุฑุงุช ูู ุงููุชุงุฆุฌ ุจูู ูุฌููุนุชูู ูุจู ูุจุนุฏ ูุนุงูุฌุฉ</li>
            </ul>
        </li>
        <li>ุทุฑููุฉ ุงูุงููุทุงุน ูู ุงูุงูุญุฏุงุฑ (Regression Discontinuity Design):
            <ul>
                <li>ุชุณุชุบู ูุฌูุฏ ุนุชุจุฉ ุชุญุฏุฏ ุงููุนุงูุฌุฉ</li>
            </ul>
        </li>
        <li>ุทุฑููุฉ ุงููุทุงุจูุฉ (Matching Methods):
            <ul>
                <li>ุชูุงุฑู ุจูู ูุญุฏุงุช ูุชุดุงุจูุฉ ุจุงุณุชุซูุงุก ุงููุนุงูุฌุฉ</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุชุฃุซูุฑ ุงููุชูุณุท ูููุนุงูุฌุฉ (Average Treatment Effect Models)</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุนูุงูุฉ ุงูุณุจุจูุฉ
	def create_causality_diagram():
		# ุฅูุดุงุก ุจูุงูุงุช ุงููุฎุทุท
		nodes = ['X', 'Y', 'Z', 'W']
		edges = [('X', 'Y'), ('Z', 'X'), ('Z', 'Y'), ('W', 'Z')]

		G = nx.DiGraph()
		G.add_nodes_from(nodes)
		G.add_edges_from(edges)

		pos = {'X': (0.3, 0.5), 'Y': (0.7, 0.5), 'Z': (0.5, 0.8), 'W': (0.5, 1.0)}

		edge_x = []
		edge_y = []
		for edge in G.edges():
			x0, y0 = pos[edge[0]]
			x1, y1 = pos[edge[1]]
			edge_x.extend([x0, x1, None])
			edge_y.extend([y0, y1, None])

		edge_trace = go.Scatter(
			x=edge_x, y=edge_y,
			line=dict(width=2, color='#888'),
			hoverinfo='none',
			mode='lines',
			name='ุงูุนูุงูุงุช'
		)

		node_x = []
		node_y = []
		node_text = []
		node_colors = ['#FF9671', '#FFC75F', '#F9F871', '#D65DB1']

		for i, node in enumerate(G.nodes()):
			x, y = pos[node]
			node_x.append(x)
			node_y.append(y)
			if node == 'X':
				node_text.append('X (ูุชุบูุฑ ูุณุชูู)')
			elif node == 'Y':
				node_text.append('Y (ูุชุบูุฑ ุชุงุจุน)')
			elif node == 'Z':
				node_text.append('Z (ูุชุบูุฑ ูุณูุท)')
			else:
				node_text.append('W (ูุชุบูุฑ ุฃุฏุงุชู)')

		node_trace = go.Scatter(
			x=node_x, y=node_y,
			mode='markers+text',
			text=node_text,
			textposition="top center",
			marker=dict(
				showscale=False,
				color=node_colors,
				size=30,
				line_width=2
			),
			name='ุงููุชุบูุฑุงุช'
		)

		# ุฅุถุงูุฉ ุชุณููุงุช ููุฑูุงุจุท
		annotations = []
		for edge in G.edges():
			x0, y0 = pos[edge[0]]
			x1, y1 = pos[edge[1]]
			annotations.append(dict(
				x=(x0 + x1) / 2,
				y=(y0 + y1) / 2,
				xref="x",
				yref="y",
				text="ุชุฃุซูุฑ",
				showarrow=True,
				arrowhead=2,
				ax=0,
				ay=-30
			))

		fig = go.Figure(data=[edge_trace, node_trace],
						layout=go.Layout(
							title="<b>ูุซุงู ุนูู ุงูุนูุงูุงุช ุงูุณุจุจูุฉ ุจูู ุงููุชุบูุฑุงุช</b>",
							titlefont_size=16,
							showlegend=False,
							hovermode='closest',
							margin=dict(b=20, l=5, r=5, t=40),
							annotations=annotations,
							xaxis=dict(showgrid=False, zeroline=False, showticklabels=False, range=[0, 1]),
							yaxis=dict(showgrid=False, zeroline=False, showticklabels=False, range=[0.4, 1.1]),
							height=500,
							plot_bgcolor='rgba(0,0,0,0)'
						))

		return fig


	# ุนุฑุถ ูุฎุทุท ุงูุนูุงูุฉ ุงูุณุจุจูุฉ
	st.plotly_chart(create_causality_diagram(), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฎุทูุงุช ุชุญููู ุงูุณุจุจูุฉ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุชุญููู ุงูุณุจุจูุฉ
	causality_steps = [
		"ุตูุงุบุฉ ูุฑุถูุฉ ุงูุณุจุจูุฉ ุจูุงุกู ุนูู ุงููุธุฑูุฉ",
		"ุชุญุฏูุฏ ุงููููุฌูุฉ ุงูููุงุณุจุฉ ููุชุญููู ุงูุณุจุจู",
		"ุงุฎุชูุงุฑ ุงูุจูุงูุงุช ุงูููุงุณุจุฉ ูุฅุนุฏุงุฏูุง",
		"ุชุทุจูู ุงุฎุชุจุงุฑุงุช ุงูุณุจุจูุฉ ุงูููุงุณุจุฉ",
		"ุชูุฏูุฑ ุงููููุฐุฌ ุงูุณุจุจู",
		"ุชูููู ุงููุชุงุฆุฌ ูุชูุณูุฑูุง",
		"ุฅุฌุฑุงุก ุชุญููู ุงูุญุณุงุณูุฉ ููุชุญูู ูู ูุชุงูุฉ ุงููุชุงุฆุฌ"
	]

	st.plotly_chart(create_process_flow(causality_steps), use_container_width=True)

elif page == "ุฅุดูุงููุฉ ุงููุนุงููุฉ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงููุนุงููุฉ</h2>

    <p>
    ุชุชุนูู ุฅุดูุงููุฉ ุงููุนุงููุฉ ุจููุงุณ ูุชูููู ุฃุซุฑ ุงูุณูุงุณุงุช ุฃู ุงูุชุฏุฎูุงุช ุฃู ุงูุจุฑุงูุฌ ุนูู ุงููุชุบูุฑุงุช ุงูุงูุชุตุงุฏูุฉ ุฃู ุงูุงุฌุชูุงุนูุฉ. ุงููุฏู ูู ุชุญุฏูุฏ ูุง ุฅุฐุง ูุงูุช ุงูุณูุงุณุฉ ุฃู ุงูุชุฏุฎู ูุนุงูุงู ูู ุชุญููู ุฃูุฏุงูู ุงููุฑุฌูุฉุ ูููุงุณ ุญุฌู ูุฐุง ุงูุชุฃุซูุฑ.
    </p>

    <h3 class="section-header">ูููุฌูุงุช ููุงุณ ุงููุนุงููุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ุทุฑู ุงููููุฌ ุดุจู ุงูุชุฌุฑูุจู (Quasi-experimental Methods):
            <ul>
                <li>ุงููุฑูู ูู ุงููุฑูู (Difference-in-Differences)</li>
                <li>ุงูุงููุทุงุน ูู ุงูุงูุญุฏุงุฑ (Regression Discontinuity Design)</li>
                <li>ุงููุชุบูุฑุงุช ุงูุฃุฏุงุชูุฉ (Instrumental Variables)</li>
                <li>ุทุฑู ุงููุทุงุจูุฉ (Matching Methods)ุ ูุซู Propensity Score Matching</li>
            </ul>
        </li>
        <li>ุทุฑู ุงูุงุณุชุฏูุงู ุงูุณุจุจู (Causal Inference Methods):
            <ul>
                <li>ููุงุฐุฌ ุชุฃุซูุฑ ุงููุนุงูุฌุฉ (Treatment Effect Models)</li>
                <li>ููุงุฐุฌ Rubin Causal Model</li>
                <li>ููุงุฐุฌ Potential Outcomes Framework</li>
            </ul>
        </li>
        <li>ุฃุฏูุงุช ุงูุชุญููู ุงููุถุงุฏ (Counterfactual Analysis Tools):
            <ul>
                <li>ููุงุฐุฌ ุงููุญุงูุงุฉ (Simulation Models)</li>
                <li>ุชุญููู ุงูุณููุงุฑูููุงุช (Scenario Analysis)</li>
                <li>ููุงุฐุฌ ุงูุชูุงุฒู ุงูุนุงู ุงููุญุณูุจุฉ (Computable General Equilibrium Models)</li>
            </ul>
        </li>
    </ul>
    </div>

    <h3 class="section-header">ูุคุดุฑุงุช ููุงุณ ุงููุนุงููุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ูุคุดุฑุงุช ุงูุชุฃุซูุฑ ุงููุจุงุดุฑ (Direct Impact Indicators):
            <ul>
                <li>ูุชูุณุท ุชุฃุซูุฑ ุงููุนุงูุฌุฉ (Average Treatment Effect - ATE)</li>
                <li>ูุชูุณุท ุชุฃุซูุฑ ุงููุนุงูุฌุฉ ุนูู ุงููุนุงูุฌูู (Average Treatment Effect on the Treated - ATT)</li>
                <li>ุงูุชุฃุซูุฑ ุงูุญุฏู ูููุนุงูุฌุฉ (Marginal Treatment Effect - MTE)</li>
            </ul>
        </li>
        <li>ูุคุดุฑุงุช ุงูููุงุกุฉ (Efficiency Indicators):
            <ul>
                <li>ุชุญููู ุงูุชูููุฉ ูุงูุนุงุฆุฏ (Cost-Benefit Analysis)</li>
                <li>ุชุญููู ุงูุชูููุฉ ูุงููุนุงููุฉ (Cost-Effectiveness Analysis)</li>
                <li>ูุนุฏู ุงูุนุงุฆุฏ ุงูุฏุงุฎูู (Internal Rate of Return)</li>
            </ul>
        </li>
        <li>ูุคุดุฑุงุช ุงููุนุงููุฉ ุนูู ุงููุฏู ุงูุทููู (Long-term Effectiveness Indicators):
            <ul>
                <li>ุงุณุชุฏุงูุฉ ุงูุชุฃุซูุฑ (Impact Sustainability)</li>
                <li>ุชุฃุซูุฑุงุช ุงูุงูุชุดุงุฑ (Spillover Effects)</li>
                <li>ุงูุชุฃุซูุฑุงุช ุบูุฑ ุงููุจุงุดุฑุฉ (Indirect Effects)</li>
            </ul>
        </li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ูุทุฑู ููุงุณ ุงููุนุงููุฉ
	def create_effectiveness_methods_chart():
		methods = ['ุงููุฑูู ูู ุงููุฑูู', 'ุงูุงููุทุงุน ูู ุงูุงูุญุฏุงุฑ', 'ุงููุชุบูุฑุงุช ุงูุฃุฏุงุชูุฉ', 'ุทุฑู ุงููุทุงุจูุฉ',
				   'ุชุญููู ุงูุณููุงุฑูููุงุช']
		complexity = [7, 8, 9, 6, 5]
		robustness = [8, 9, 7, 6, 4]
		applicability = [9, 7, 6, 8, 9]

		fig = go.Figure()

		fig.add_trace(go.Bar(
			x=methods,
			y=complexity,
			name='ุงูุชุนููุฏ',
			marker_color='indianred'
		))

		fig.add_trace(go.Bar(
			x=methods,
			y=robustness,
			name='ุงููุชุงูุฉ',
			marker_color='lightsalmon'
		))

		fig.add_trace(go.Bar(
			x=methods,
			y=applicability,
			name='ูุงุจููุฉ ุงูุชุทุจูู',
			marker_color='lightseagreen'
		))

		fig.update_layout(
			title="<b>ููุงุฑูุฉ ุจูู ุทุฑู ููุงุณ ุงููุนุงููุฉ</b>",
			xaxis_title="ุงูุทุฑููุฉ",
			yaxis_title="ุงูุชูููู (1-10)",
			barmode='group',
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ุทุฑู ููุงุณ ุงููุนุงููุฉ
	st.plotly_chart(create_effectiveness_methods_chart(), use_container_width=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุซุงู ุนูู ุชุญููู ุงููุฑูู ูู ุงููุฑูู
	def create_diff_in_diff_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
		time = list(range(1, 11))
		treated_before = [5, 5.2, 5.4, 5.5, 5.7]
		treated_after = [5.9, 6.5, 7.0, 7.5, 8.0]
		control_before = [5.1, 5.3, 5.5, 5.6, 5.8]
		control_after = [5.9, 6.1, 6.3, 6.5, 6.7]

		intervention_time = 5.5

		fig = go.Figure()

		# ุฅุถุงูุฉ ุงููุฌููุนุฉ ุงููุนุงูุฌุฉ
		fig.add_trace(go.Scatter(
			x=time[:5],
			y=treated_before,
			mode='lines+markers',
			name='ุงููุฌููุนุฉ ุงููุนุงูุฌุฉ (ูุจู)',
			line=dict(color='royalblue')
		))

		fig.add_trace(go.Scatter(
			x=time[5:],
			y=treated_after,
			mode='lines+markers',
			name='ุงููุฌููุนุฉ ุงููุนุงูุฌุฉ (ุจุนุฏ)',
			line=dict(color='royalblue', dash='dash')
		))

		# ุฅุถุงูุฉ ุงููุฌููุนุฉ ุงูุถุงุจุทุฉ
		fig.add_trace(go.Scatter(
			x=time[:5],
			y=control_before,
			mode='lines+markers',
			name='ุงููุฌููุนุฉ ุงูุถุงุจุทุฉ (ูุจู)',
			line=dict(color='firebrick')
		))

		fig.add_trace(go.Scatter(
			x=time[5:],
			y=control_after,
			mode='lines+markers',
			name='ุงููุฌููุนุฉ ุงูุถุงุจุทุฉ (ุจุนุฏ)',
			line=dict(color='firebrick', dash='dash')
		))

		# ุฅุถุงูุฉ ุฎุท ุงูุชุฏุฎู
		fig.add_shape(
			type="line",
			x0=intervention_time,
			y0=0,
			x1=intervention_time,
			y1=10,
			line=dict(
				color="green",
				width=2,
				dash="dashdot",
			)
		)

		fig.add_annotation(
			x=intervention_time,
			y=9,
			text="ููุช ุงูุชุฏุฎู",
			showarrow=True,
			arrowhead=1,
			arrowcolor="green",
			arrowwidth=2,
			ax=-50,
			ay=0
		)

		# ุฅุถุงูุฉ ุงูุชุฃุซูุฑ (ุงููุฑู ูู ุงููุฑูู)
		fig.add_annotation(
			x=8,
			y=7.5,
			text="ุงูุชุฃุซูุฑ = (Treated After - Treated Before) - (Control After - Control Before)",
			showarrow=True,
			arrowhead=1,
			arrowcolor="purple",
			arrowwidth=2,
			ax=0,
			ay=-40
		)

		fig.update_layout(
			title="<b>ูุซุงู ุนูู ุชุญููู ุงููุฑูู ูู ุงููุฑูู</b>",
			xaxis_title="ุงูุฒูู",
			yaxis_title="ุงููููุฉ",
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ูุซุงู ุนูู ุชุญููู ุงููุฑูู ูู ุงููุฑูู
	st.plotly_chart(create_diff_in_diff_chart(), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฎุทูุงุช ุชูููู ูุนุงููุฉ ุงูุณูุงุณุงุช ุฃู ุงูุชุฏุฎูุงุช:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุชูููู ุงููุนุงููุฉ
	effectiveness_steps = [
		"ุชุญุฏูุฏ ุงูุณูุงุณุฉ ุฃู ุงูุชุฏุฎู ุงููุฑุงุฏ ุชููููู",
		"ุชุญุฏูุฏ ูุคุดุฑุงุช ุงููุชุงุฆุฌ ุงููุณุชูุฏูุฉ",
		"ุงุฎุชูุงุฑ ุงููููุฌูุฉ ุงูููุงุณุจุฉ ูููุงุณ ุงููุนุงููุฉ",
		"ุชุตููู ุงุณุชุฑุงุชูุฌูุฉ ุงูุชุนุฑูู (Identification Strategy)",
		"ุฌูุน ุงูุจูุงูุงุช ุงูููุงุณุจุฉ",
		"ุชุทุจูู ุงููููุฐุฌ ูุชูุฏูุฑ ุงูุชุฃุซูุฑ",
		"ุชุญููู ุงูุญุณุงุณูุฉ ูุงููุชุงูุฉ",
		"ุชูุณูุฑ ุงููุชุงุฆุฌ ูุงุณุชุฎูุงุต ุงูุชูุตูุงุช"
	]

	st.plotly_chart(create_process_flow(effectiveness_steps), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุชุญุฏูุงุช ููุงุณ ุงููุนุงููุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ูุดููุฉ ุงูุงูุชูุงุฆูุฉ (Selection Bias): ุนุฏู ุนุดูุงุฆูุฉ ุงุฎุชูุงุฑ ุงููุฌููุนุงุช ุงููุนุงูุฌุฉ ูุงูุถุงุจุทุฉ.</li>
        <li>ุชุฃุซูุฑุงุช ุงูุงูุชุดุงุฑ (Spillover Effects): ุชุฃุซุฑ ุงููุฌููุนุฉ ุงูุถุงุจุทุฉ ุจุงููุนุงูุฌุฉ.</li>
        <li>ูุดููุฉ ุงููุชุบูุฑุงุช ุงููุญุฐููุฉ (Omitted Variable Bias): ุนุฏู ุชุถููู ูุชุบูุฑุงุช ูุคุซุฑุฉ ูู ุงููููุฐุฌ.</li>
        <li>ูุดููุฉ ุงูุงุชุฌุงูุงุช ุงููุดุชุฑูุฉ (Common Trends Assumption): ุงูุชุฑุงุถ ุชุดุงุจู ุงุชุฌุงูุงุช ุงููุฌููุนุชูู ูู ุบูุงุจ ุงููุนุงูุฌุฉ.</li>
        <li>ูุดููุฉ ุงูุชูููุช (Timing Issues): ุชุญุฏูุฏ ุงููุชุฑุฉ ุงูููุงุณุจุฉ ูููุงุณ ุงูุชุฃุซูุฑ.</li>
        <li>ูุดููุฉ ุงูุฎุงุฑุฌูุฉ (External Validity): ุฅููุงููุฉ ุชุนููู ุงููุชุงุฆุฌ ุนูู ุณูุงูุงุช ุฃุฎุฑู.</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

elif page == "ุฅุดูุงููุฉ ุงูุชูุจุค":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงูุชูุจุค</h2>

    <p>
    ุชุชุนูู ุฅุดูุงููุฉ ุงูุชูุจุค ุจุงููุฏุฑุฉ ุนูู ุงูุชููุน ุจุงูููู ุงููุณุชูุจููุฉ ูููุชุบูุฑุงุช ุจูุงุกู ุนูู ุงูุจูุงูุงุช ุงูุชุงุฑูุฎูุฉ ูุงูููุงุฐุฌ ุงูุฅุญุตุงุฆูุฉ ูุงูููุงุณูุฉ. ุชุนุชุจุฑ ุนูููุฉ ุงูุชูุจุค ูู ุฃูู ุชุทุจููุงุช ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ ูุชุณุชุฎุฏู ูู ูุฌุงูุงุช ูุชููุนุฉ ูุซู ุงูุงูุชุตุงุฏ ูุงููุงููุฉ ูุงูุฃุนูุงู ูุบูุฑูุง.
    </p>

    <h3 class="section-header">ุฃููุงุน ููุงุฐุฌ ุงูุชูุจุค:</h3>
    <div class="model-box">
    <ol>
        <li>ุงูุทุฑู ุงูุชูููุฏูุฉ (Traditional Methods):
            <ul>
                <li>ุงูุชูููุฏ ุงูุฃุณู (Exponential Smoothing)</li>
                <li>ููุงุฐุฌ ARIMA (Autoregressive Integrated Moving Average)</li>
                <li>ุงูุชูุจุค ุงููุดุฑูุท ุจุงูุงูุญุฏุงุฑ (Conditional Forecasting)</li>
                <li>ููุงุฐุฌ ARCH (Autoregressive Conditional Heteroskedasticity)</li>
                <li>ููุงุฐุฌ GARCH (Generalized Autoregressive Conditional Heteroskedasticity)</li>
            </ul>
        </li>
        <li>ุงูุทุฑู ุงูุญุฏูุซุฉ (Modern Methods):
            <ul>
                <li>ุฎูุงุฑุฒููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู (Artificial Intelligence Algorithms):
                    <ul>
                        <li>ุงูุดุจูุงุช ุงูุนุตุจูุฉ ุงูุชูุงููููุฉ (CNN - Convolutional Neural Networks)</li>
                        <li>ุงูุดุจูุงุช ุงูุนุตุจูุฉ ุฐุงุช ุงูุฐุงูุฑุฉ ูุตูุฑุฉ-ุทูููุฉ ุงููุฏู (LSTM - Long Short-Term Memory)</li>
                        <li>ุงูุดุจูุงุช ุงูุนุตุจูุฉ ุงููุชูุฑุฑุฉ (RNN - Recurrent Neural Networks)</li>
                        <li>ููุงุฐุฌ CARD (Combined ARIMA and Deep Learning)</li>
                        <li>ุทุฑููุฉ TETA (Temporal and Exogenous Trend Analysis)</li>
                    </ul>
                </li>
            </ul>
        </li>
        <li>ุงูุทุฑู ุงูุญุฏูุซุฉ ุงููุฏูุฌุฉ (Hybrid Modern Methods):
            <ul>
                <li>ููุงุฐุฌ GARCH-LSTM</li>
                <li>ููุงุฐุฌ Deep VAR</li>
                <li>ููุงุฐุฌ ANN-ARIMA</li>
                <li>ููุงุฐุฌ DL-ARIMA</li>
            </ul>
        </li>
    </ol>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุฅูุดุงุก ุฑุณู ุจูุงูู ูุฃููุงุน ููุงุฐุฌ ุงูุชูุจุค
	forecasting_models = [
		"ููุงุฐุฌ ุงูุชูุจุค",
		"ุงูุทุฑู ุงูุชูููุฏูุฉ", "ุงูุทุฑู ุงูุญุฏูุซุฉ", "ุงูุทุฑู ุงูุญุฏูุซุฉ ุงููุฏูุฌุฉ"
	]

	traditional_models = [
		"ุงูุทุฑู ุงูุชูููุฏูุฉ",
		"ุงูุชูููุฏ ุงูุฃุณู", "ููุงุฐุฌ ARIMA", "ุงูุชูุจุค ุงููุดุฑูุท ุจุงูุงูุญุฏุงุฑ", "ููุงุฐุฌ ARCH/GARCH"
	]

	modern_models = [
		"ุงูุทุฑู ุงูุญุฏูุซุฉ",
		"ุงูุดุจูุงุช ุงูุนุตุจูุฉ CNN", "ุงูุดุจูุงุช ุงูุนุตุจูุฉ LSTM", "ุงูุดุจูุงุช ุงูุนุตุจูุฉ RNN", "ููุงุฐุฌ CARD", "ุทุฑููุฉ TETA"
	]

	hybrid_models = [
		"ุงูุทุฑู ุงูุญุฏูุซุฉ ุงููุฏูุฌุฉ",
		"ููุงุฐุฌ GARCH-LSTM", "ููุงุฐุฌ Deep VAR", "ููุงุฐุฌ ANN-ARIMA", "ููุงุฐุฌ DL-ARIMA"
	]

	# ุนุฑุถ ูุฎุทุท ุฃููุงุน ููุงุฐุฌ ุงูุชูุจุค
	st.plotly_chart(create_model_hierarchy("ููุงุฐุฌ ุงูุชูุจุค", forecasting_models), use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุงูุทุฑู ุงูุชูููุฏูุฉ
	st.plotly_chart(create_model_hierarchy("ุงูุทุฑู ุงูุชูููุฏูุฉ", traditional_models), use_container_width=True)

	# ุนุฑุถ ูุฎุทุท ุงูุทุฑู ุงูุญุฏูุซุฉ
	st.plotly_chart(create_model_hierarchy("ุงูุทุฑู ุงูุญุฏูุซุฉ", modern_models), use_container_width=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ูููุงุฑูุฉ ุฏูุฉ ููุงุฐุฌ ุงูุชูุจุค
	def create_forecast_accuracy_chart():
		models = ['ARIMA', 'GARCH', 'LSTM', 'CNN', 'GARCH-LSTM', 'Deep VAR']
		mae = [0.42, 0.38, 0.31, 0.33, 0.28, 0.26]
		mse = [0.53, 0.47, 0.39, 0.41, 0.35, 0.33]
		mape = [0.38, 0.35, 0.29, 0.30, 0.25, 0.24]

		fig = go.Figure()

		fig.add_trace(go.Bar(
			x=models,
			y=mae,
			name='MAE (ูุชูุณุท ุงูุฎุทุฃ ุงููุทูู)',
			marker_color='indianred'
		))

		fig.add_trace(go.Bar(
			x=models,
			y=mse,
			name='MSE (ูุชูุณุท ูุฑุจุน ุงูุฎุทุฃ)',
			marker_color='lightsalmon'
		))

		fig.add_trace(go.Bar(
			x=models,
			y=mape,
			name='MAPE (ูุชูุณุท ุงููุณุจุฉ ุงููุฆููุฉ ููุฎุทุฃ ุงููุทูู)',
			marker_color='lightseagreen'
		))

		fig.update_layout(
			title="<b>ููุงุฑูุฉ ุฏูุฉ ููุงุฐุฌ ุงูุชูุจุค ุงููุฎุชููุฉ</b>",
			xaxis_title="ุงููููุฐุฌ",
			yaxis_title="ูููุฉ ุงูุฎุทุฃ (ุฃูู = ุฃูุถู)",
			barmode='group',
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ููุงุฑูุฉ ุฏูุฉ ููุงุฐุฌ ุงูุชูุจุค
	st.plotly_chart(create_forecast_accuracy_chart(), use_container_width=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุซุงู ุนูู ุงูุชูุจุค
	def create_forecast_example_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
		time_historical = list(range(1, 21))
		time_forecast = list(range(21, 31))

		# ุงูููู ุงูุชุงุฑูุฎูุฉ
		values_historical = [10 + i + 2 * np.sin(i / 2) + np.random.normal(0, 1) for i in range(20)]

		# ุงูููู ุงููุชูุจุฃ ุจูุง ูุน ูุงุตู ุงูุซูุฉ
		values_forecast = [30 + i + 2 * np.sin(i / 2) for i in range(10)]
		values_forecast_upper = [v + 2 + 0.2 * i for i, v in enumerate(values_forecast)]
		values_forecast_lower = [v - 2 - 0.2 * i for i, v in enumerate(values_forecast)]

		fig = go.Figure()

		# ุฅุถุงูุฉ ุงูููู ุงูุชุงุฑูุฎูุฉ
		fig.add_trace(go.Scatter(
			x=time_historical,
			y=values_historical,
			mode='lines+markers',
			name='ุงูููู ุงูุชุงุฑูุฎูุฉ',
			line=dict(color='royalblue')
		))

		# ุฅุถุงูุฉ ุงูููู ุงููุชูุจุฃ ุจูุง
		fig.add_trace(go.Scatter(
			x=time_forecast,
			y=values_forecast,
			mode='lines+markers',
			name='ุงูููู ุงููุชูุจุฃ ุจูุง',
			line=dict(color='firebrick')
		))

		# ุฅุถุงูุฉ ูุงุตู ุงูุซูุฉ
		fig.add_trace(go.Scatter(
			x=time_forecast + time_forecast[::-1],
			y=values_forecast_upper + values_forecast_lower[::-1],
			fill='toself',
			fillcolor='rgba(231,107,243,0.2)',
			line=dict(color='rgba(255,255,255,0)'),
			showlegend=True,
			name='ูุงุตู ุงูุซูุฉ (95%)'
		))

		# ุฅุถุงูุฉ ุฎุท ุงููุตู ุจูู ุงูุจูุงูุงุช ุงูุชุงุฑูุฎูุฉ ูุงูุชูุจุคุงุช
		fig.add_shape(
			type="line",
			x0=20.5,
			y0=0,
			x1=20.5,
			y1=50,
			line=dict(
				color="green",
				width=2,
				dash="dashdot",
			)
		)

		fig.add_annotation(
			x=20.5,
			y=45,
			text="ุจุฏุงูุฉ ุงูุชูุจุค",
			showarrow=True,
			arrowhead=1,
			arrowcolor="green",
			arrowwidth=2,
			ax=-50,
			ay=0
		)

		fig.update_layout(
			title="<b>ูุซุงู ุนูู ุงูุชูุจุค ูุน ูุงุตู ุงูุซูุฉ</b>",
			xaxis_title="ุงูุฒูู",
			yaxis_title="ุงููููุฉ",
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ูุซุงู ุนูู ุงูุชูุจุค
	st.plotly_chart(create_forecast_example_chart(), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ููุงููุณ ุฏูุฉ ุงูุชูุจุค:</h3>
    <div class="model-box">
    <ul>
        <li>ูุชูุณุท ุงูุฎุทุฃ ุงููุทูู (MAE - Mean Absolute Error)</li>
        <li>ูุชูุณุท ูุฑุจุน ุงูุฎุทุฃ (MSE - Mean Squared Error)</li>
        <li>ุงูุฌุฐุฑ ุงูุชุฑุจูุนู ููุชูุณุท ูุฑุจุน ุงูุฎุทุฃ (RMSE - Root Mean Squared Error)</li>
        <li>ูุชูุณุท ุงููุณุจุฉ ุงููุฆููุฉ ููุฎุทุฃ ุงููุทูู (MAPE - Mean Absolute Percentage Error)</li>
        <li>ูุนุงูู ุซูู ููุนุฏู ุงูุชุณุงูู (Theil's U)</li>
        <li>ูุนูุงุฑ ุงููุนูููุงุช ุงูุจูุฒู (BIC - Bayesian Information Criterion)</li>
        <li>ูุนูุงุฑ ูุนูููุงุช ุฃูุงููู (AIC - Akaike Information Criterion)</li>
    </ul>
    </div>

    <h3 class="section-header">ุฎุทูุงุช ุจูุงุก ูููุฐุฌ ููุชูุจุค:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุจูุงุก ูููุฐุฌ ุงูุชูุจุค
	forecasting_steps = [
		"ุชุญุฏูุฏ ุงููุฏู ูู ุงูุชูุจุค",
		"ุชุญููู ุงูุจูุงูุงุช ุงูุชุงุฑูุฎูุฉ",
		"ุชูุณูู ุงูุจูุงูุงุช (ุชุฏุฑูุจุ ุงุฎุชุจุงุฑุ ุชุญูู)",
		"ุงุฎุชูุงุฑ ุงููููุฐุฌ ุงูููุงุณุจ",
		"ุชูุฏูุฑ ุงููููุฐุฌ",
		"ุชูููู ุฏูุฉ ุงููููุฐุฌ",
		"ุงุณุชุฎุฏุงู ุงููููุฐุฌ ููุชูุจุค",
		"ูุฑุงูุจุฉ ุฃุฏุงุก ุงููููุฐุฌ ูุชุญุฏูุซู"
	]

	st.plotly_chart(create_process_flow(forecasting_steps), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุชุญุฏูุงุช ุงูุชูุจุค:</h3>
    <div class="model-box">
    <ul>
        <li>ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช ุบูุฑ ุงููุณุชูุฑุฉ (Non-stationary data)</li>
        <li>ุงูุชุนุงูู ูุน ุชุบูุฑ ุงููููู (Structural changes)</li>
        <li>ุงูุชุนุงูู ูุน ุงูุชููุจุงุช ุงูููุณููุฉ ูุงูุฏูุฑูุฉ (Seasonal and cyclical variations)</li>
        <li>ุงูุชุนุงูู ูุน ุงูุฃุญุฏุงุซ ุบูุฑ ุงููุชููุนุฉ (Unexpected events)</li>
        <li>ุชุญุฏูุฏ ุฃูู ุงูุชูุจุค ุงูููุงุณุจ (Appropriate forecast horizon)</li>
        <li>ุงุฎุชูุงุฑ ุงููููุฐุฌ ุงูููุงุณุจ ุจูู ููุงุฐุฌ ูุชุนุฏุฏุฉ (Model selection)</li>
        <li>ุชูุฏูุฑ ููุงุตู ุงูุซูุฉ ููุชูุจุคุงุช (Confidence intervals for forecasts)</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

elif page == "ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ</h2>

    <p>
    ุชุชุนูู ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ ุจุฏุฑุงุณุฉ ูุชุญููู ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุช ูู ุขูุงู ุฒูููุฉ ูุฎุชููุฉ. ุบุงูุจุงู ูุง ุชุฎุชูู ุงูุนูุงูุงุช ุจูู ุงููุชุบูุฑุงุช ูู ุงูุฃุฌู ุงููุตูุฑ ุนููุง ูู ุงูุฃุฌู ุงูุทูููุ ููุง ูุชุทูุจ ุงุณุชุฎุฏุงู ูููุฌูุงุช ุฎุงุตุฉ ููุชูููุฒ ุจูู ูุฐู ุงูุนูุงูุงุช ูุชุญููููุง.
    </p>

    <h3 class="section-header">ุงุฎุชุจุงุฑุงุช ุงูุฃุฌู ุงููุตูุฑ ูุงููุชูุณุท ูุงูุทููู:</h3>
    <div class="model-box">
    <ul>
        <li>ุงุฎุชุจุงุฑุงุช ุงูุชูุงูู ุงููุดุชุฑู (Cointegration Tests):
            <ul>
                <li>ุงุฎุชุจุงุฑ ุฅูุฌู-ุบุฑุงูุฌุฑ (Engle-Granger Test)</li>
                <li>ุงุฎุชุจุงุฑ ุฌููุงูุณู (Johansen Test)</li>
                <li>ุงุฎุชุจุงุฑ ุงูุญุฏูุฏ (ARDL Bounds Test)</li>
            </ul>
        </li>
        <li>ุงุฎุชุจุงุฑุงุช ุฌุฐุฑ ุงููุญุฏุฉ (Unit Root Tests):
            <ul>
                <li>ุงุฎุชุจุงุฑ ุฏููู-ูููุฑ ุงูููุณุน (ADF - Augmented Dickey-Fuller)</li>
                <li>ุงุฎุชุจุงุฑ ููููุจุณ-ุจูุฑูู (PP - Phillips-Perron)</li>
                <li>ุงุฎุชุจุงุฑ KPSS</li>
            </ul>
        </li>
        <li>ุงุฎุชุจุงุฑุงุช ุงูุงุณุชูุฑุงุฑ ุงูููููู (Structural Stability Tests):
            <ul>
                <li>ุงุฎุชุจุงุฑ CUSUM</li>
                <li>ุงุฎุชุจุงุฑ CUSUMSQ</li>
                <li>ุงุฎุชุจุงุฑ ุดุงู (Chow Test)</li>
            </ul>
        </li>
    </ul>
    </div>

    <h3 class="section-header">ุงูููุงุฐุฌ ุงููุณุชุฎุฏูุฉ ูู ุชุญููู ุงูุนูุงูุงุช ูู ุงูุฃุฌู ุงูุทููู ูุงููุตูุฑ:</h3>
    <div class="model-box">
    <ul>
        <li>ููุงุฐุฌ ุชุตุญูุญ ุงูุฎุทุฃ (ECM - Error Correction Models):
            <ul>
                <li>ุชุฌูุน ุจูู ุฏููุงููููุงุช ุงูุฃุฌู ุงููุตูุฑ ูุงูุนูุงูุงุช ุทูููุฉ ุงูุฃุฌู</li>
                <li>ุชููุณ ุณุฑุนุฉ ุงูุชุนุฏูู ูุญู ุงูุชูุงุฒู ุทููู ุงูุฃุฌู</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู ุฐู ุงููุฌูุงุช ุงูููุฒุนุฉ (ARDL - Autoregressive Distributed Lag):
            <ul>
                <li>ุชุณูุญ ุจุชูุฏูุฑ ุงูุนูุงูุงุช ูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู ูู ุขู ูุงุญุฏ</li>
                <li>ุชุชุนุงูู ูุน ูุชุบูุฑุงุช ุฐุงุช ุฏุฑุฌุงุช ุชูุงูู ูุฎุชููุฉ</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ูุชุฌู ุชุตุญูุญ ุงูุฎุทุฃ (VECM - Vector Error Correction Models):
            <ul>
                <li>ุงูุชุฏุงุฏ ูููุงุฐุฌ ECM ููุชุนุงูู ูุน ูุชุบูุฑุงุช ูุชุนุฏุฏุฉ</li>
                <li>ุชุญููู ุงูุนูุงูุงุช ุงููุชุจุงุฏูุฉ ูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุชุญูู ุงูููููู (Structural Break Models):
            <ul>
                <li>ุชุชุนุงูู ูุน ุงูุชุบูุฑุงุช ูู ุงูุนูุงูุงุช ุนุจุฑ ุงูุฒูู</li>
                <li>ุชุณูุญ ุจุชุญุฏูุฏ ููุงุท ุงูุชุญูู ูู ุงูุนูุงูุงุช ุทูููุฉ ุงูุฃุฌู</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุงูุนุชุจุฉ (Threshold Models):
            <ul>
                <li>ุชุณูุญ ุจุชุบูุฑ ุงูุนูุงูุงุช ุนูุฏ ุชุฌุงูุฒ ููู ูุนููุฉ (ุนุชุจุงุช)</li>
                <li>ููุงุณุจุฉ ููุนูุงูุงุช ุบูุฑ ุงูุฎุทูุฉ ุนุจุฑ ุงูุฒูู</li>
            </ul>
        </li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุซุงู ุนูู ุงูุนูุงูุฉ ุจูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู
	def create_short_long_term_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
		time = list(range(1, 101))
		y_long_term = [0.5 * t for t in time]
		y_short_term = [0.5 * t + 5 * np.sin(t / 5) for t in time]

		fig = go.Figure()

		# ุฅุถุงูุฉ ุงูุนูุงูุฉ ุทูููุฉ ุงูุฃุฌู
		fig.add_trace(go.Scatter(
			x=time,
			y=y_long_term,
			mode='lines',
			name='ุงูุนูุงูุฉ ุทูููุฉ ุงูุฃุฌู',
			line=dict(color='royalblue', width=3)
		))

		# ุฅุถุงูุฉ ุงูุนูุงูุฉ ูุตูุฑุฉ ุงูุฃุฌู
		fig.add_trace(go.Scatter(
			x=time,
			y=y_short_term,
			mode='lines',
			name='ุงูุนูุงูุฉ ูุตูุฑุฉ ุงูุฃุฌู',
			line=dict(color='firebrick', width=1.5)
		))

		# ุฅุถุงูุฉ ุชูุถูุญ ููุงูุญุฑุงูุงุช ูุตูุฑุฉ ุงูุฃุฌู
		for i in range(10, 90, 20):
			if y_short_term[i] > y_long_term[i]:
				arrow_y = 5
			else:
				arrow_y = -5

			fig.add_annotation(
				x=time[i],
				y=y_short_term[i],
				text="ุงูุญุฑุงู ูุตูุฑ ุงูุฃุฌู",
				showarrow=True,
				arrowhead=1,
				arrowcolor="green",
				arrowwidth=2,
				ax=0,
				ay=arrow_y
			)

		# ุฅุถุงูุฉ ุชูุถูุญ ููุนูุงูุฉ ุทูููุฉ ุงูุฃุฌู
		fig.add_annotation(
			x=80,
			y=y_long_term[80],
			text="ุงุชุฌุงู ุทููู ุงูุฃุฌู",
			showarrow=True,
			arrowhead=1,
			arrowcolor="blue",
			arrowwidth=2,
			ax=-80,
			ay=0
		)

		fig.update_layout(
			title="<b>ูุซุงู ุนูู ุงูุนูุงูุฉ ุจูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุฃุฌู ุงูุทููู</b>",
			xaxis_title="ุงูุฒูู",
			yaxis_title="ุงููููุฉ",
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ูุซุงู ุนูู ุงูุนูุงูุฉ ุจูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู
	st.plotly_chart(create_short_long_term_chart(), use_container_width=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููููุฐุฌ ุชุตุญูุญ ุงูุฎุทุฃ
	def create_ecm_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
		time = list(range(1, 51))
		equilibrium = [2 * t for t in time]

		# ุญุฏุซ ุตุฏูุฉ ูู ุงููุชุฑุฉ 20
		actual = []
		for t in range(50):
			if t < 20:
				actual.append(equilibrium[t] + np.random.normal(0, 3))
			elif t == 20:
				actual.append(equilibrium[t] + 30)  # ุตุฏูุฉ ูุจูุฑุฉ
			else:
				adjustment = 0.2 * (equilibrium[t - 1] - actual[t - 1])  # ูุนุงูู ุชุตุญูุญ ุงูุฎุทุฃ
				actual.append(actual[t - 1] + adjustment + np.random.normal(0, 3))

		fig = go.Figure()

		# ุฅุถุงูุฉ ุงูุชูุงุฒู ุทููู ุงูุฃุฌู
		fig.add_trace(go.Scatter(
			x=time,
			y=equilibrium,
			mode='lines',
			name='ุงูุชูุงุฒู ุทููู ุงูุฃุฌู',
			line=dict(color='royalblue', width=3)
		))

		# ุฅุถุงูุฉ ุงูููู ุงููุนููุฉ
		fig.add_trace(go.Scatter(
			x=time,
			y=actual,
			mode='lines',
			name='ุงูููู ุงููุนููุฉ',
			line=dict(color='firebrick', width=1.5)
		))

		# ุฅุถุงูุฉ ุชูุถูุญ ููุตุฏูุฉ
		fig.add_annotation(
			x=time[20],
			y=actual[20],
			text="ุตุฏูุฉ",
			showarrow=True,
			arrowhead=1,
			arrowcolor="red",
			arrowwidth=2,
			ax=0,
			ay=-40
		)

		# ุฅุถุงูุฉ ุชูุถูุญ ูุนูููุฉ ุงูุชุตุญูุญ
		fig.add_annotation(
			x=time[35],
			y=actual[35],
			text="ุนูููุฉ ุชุตุญูุญ ุงูุฎุทุฃ",
			showarrow=True,
			arrowhead=1,
			arrowcolor="green",
			arrowwidth=2,
			ax=0,
			ay=30
		)

		fig.update_layout(
			title="<b>ูุซุงู ุนูู ูููุฐุฌ ุชุตุญูุญ ุงูุฎุทุฃ (ECM)</b>",
			xaxis_title="ุงูุฒูู",
			yaxis_title="ุงููููุฉ",
			height=500,
			font=dict(
				family="Arial",
				size=14
			)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ูููุฐุฌ ุชุตุญูุญ ุงูุฎุทุฃ
	st.plotly_chart(create_ecm_chart(), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฎุทูุงุช ุชุญููู ุงูุนูุงูุงุช ูู ุงูุฃุฌู ุงูุทููู ูุงููุตูุฑ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุชุญููู ุงูุนูุงูุงุช
	time_horizon_steps = [
		"ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฑูุฉ ุงูุณูุงุณู ุงูุฒูููุฉ",
		"ุชุญุฏูุฏ ุฏุฑุฌุฉ ุงูุชูุงูู ูููุชุบูุฑุงุช",
		"ุงุฎุชุจุงุฑ ูุฌูุฏ ุนูุงูุฉ ุชูุงุฒููุฉ ุทูููุฉ ุงูุฃุฌู (ุชูุงูู ูุดุชุฑู)",
		"ุงุฎุชูุงุฑ ุงููููุฐุฌ ุงูููุงุณุจ (ECM, ARDL, VECM...)",
		"ุชูุฏูุฑ ุงูุนูุงูุงุช ูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู",
		"ุชุญููู ุณุฑุนุฉ ุงูุชุนุฏูู ูุญู ุงูุชูุงุฒู ุทููู ุงูุฃุฌู",
		"ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฑ ุงููููุฐุฌ",
		"ุชูุณูุฑ ุงููุชุงุฆุฌ ูุงุณุชุฎูุงุต ุงูุงุณุชูุชุงุฌุงุช"
	]

	st.plotly_chart(create_process_flow(time_horizon_steps), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ููุงููู ุฃุณุงุณูุฉ ูู ุชุญููู ุงูุฃุฌู ุงูุทููู ูุงููุตูุฑ:</h3>
    <div class="model-box">
    <ul>
        <li>ุงูุชูุงูู ุงููุดุชุฑู (Cointegration): ูุฌูุฏ ุนูุงูุฉ ุชูุงุฒููุฉ ุทูููุฉ ุงูุฃุฌู ุจูู ูุชุบูุฑุงุช ุบูุฑ ูุณุชูุฑุฉ.</li>
        <li>ุขููุฉ ุชุตุญูุญ ุงูุฎุทุฃ (Error Correction Mechanism): ุงูุนูููุฉ ุงูุชู ุชุนูุฏ ุงููุชุบูุฑุงุช ุฅูู ุงูุชูุงุฒู ุทููู ุงูุฃุฌู ุจุนุฏ ุงูุตุฏูุงุช.</li>
        <li>ุณุฑุนุฉ ุงูุชุนุฏูู (Speed of Adjustment): ูุนุฏู ุนูุฏุฉ ุงููุธุงู ุฅูู ุงูุชูุงุฒู ุทููู ุงูุฃุฌู ุจุนุฏ ุงูุตุฏูุงุช.</li>
        <li>ุงูุงุณุชุฌุงุจุฉ ุงูุฏููุงููููุฉ (Dynamic Response): ููููุฉ ุงุณุชุฌุงุจุฉ ุงููุชุบูุฑุงุช ููุตุฏูุงุช ุนุจุฑ ุงูุฒูู.</li>
        <li>ุฏูุงู ุงูุงุณุชุฌุงุจุฉ ููุตุฏูุงุช (Impulse Response Functions): ุชุชุจุน ุฃุซุฑ ุตุฏูุฉ ูู ูุชุบูุฑ ุนูู ูุชุบูุฑุงุช ุฃุฎุฑู ุนุจุฑ ุงูุฒูู.</li>
        <li>ุชุญููู ุงูุชุจุงูู (Variance Decomposition): ุชุญุฏูุฏ ูุณุจุฉ ุงูุชุจุงูู ูู ูุชุบูุฑ ูุงุชุฌุฉ ุนู ุตุฏูุงุช ูู ูุชุบูุฑุงุช ุฃุฎุฑู.</li>
    </ul>
    </div>

    <h3 class="section-header">ุชุญุฏูุงุช ุชุญููู ุงูุฃุฌู ุงูุทููู ูุงููุตูุฑ:</h3>
    <div class="model-box">
    <ul>
        <li>ุงูุชูููุฒ ุจูู ุงูุงุชุฌุงูุงุช ุงูุนุดูุงุฆูุฉ ูุงูุงุชุฌุงูุงุช ุงููุญุฏุฏุฉ.</li>
        <li>ุงูุชุนุงูู ูุน ุงูุชุบูุฑุงุช ุงููููููุฉ ูู ุงูุนูุงูุงุช ุทูููุฉ ุงูุฃุฌู.</li>
        <li>ุชุญุฏูุฏ ุงููุชุฑุงุช ุงูุฒูููุฉ ุงูููุงุณุจุฉ ูุชุญููู ุงูุฃุฌู ุงููุตูุฑ ูุงููุชูุณุท ูุงูุทููู.</li>
        <li>ุงูุชุนุงูู ูุน ุงูุนูุงูุงุช ุบูุฑ ุงูุฎุทูุฉ ูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู.</li>
        <li>ุงุฎุชูุงุฑ ุทูู ุงููุฌูุงุช ุงูููุงุณุจ ูู ุงูููุงุฐุฌ ุงูุฏููุงููููุฉ.</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

elif page == "ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ":
	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h2 class="sub-header">ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ</h2>

    <p>
    ุชุชุนูู ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจุงูุฏุฑุงุณุงุช ุงูุชู ุชุชุถูู ุชุญููู ุนุฏุฉ ุฅุดูุงููุงุช ูู ุขู ูุงุญุฏุ ูุซู ุฏุฑุงุณุฉ ุงูุนูุงูุงุช ุงูุณุจุจูุฉ ูุงูุชูุจุค ูู ุขู ูุงุญุฏุ ุฃู ุฏุฑุงุณุฉ ุงููุญุฏุฏุงุช ูุงูุชุฃุซูุฑ ุทููู ุงูุฃุฌู ูุนุงู. ุชุชุทูุจ ูุฐู ุงูุฅุดูุงููุฉ ุงุณุชุฎุฏุงู ูููุฌูุงุช ูุชุทูุฑุฉ ุชุฌูุน ุจูู ุนุฏุฉ ููุงุฐุฌ ุฃู ุชูููุงุช.
    </p>

    <h3 class="section-header">ุฃููุงุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูุฃุซุฑ ูุงูุณุจุจูุฉ</li>
        <li>ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงููุญุฏุฏุงุช ูุงูุชูุจุค</li>
        <li>ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูุฃุฌู ุงูุทููู ูุงููุนุงููุฉ</li>
        <li>ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูููุงุฑูุฉ ูุงูุชุฃุซูุฑ</li>
        <li>ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ูุชุนุฏุฏุฉ ุงูุฃุจุนุงุฏ</li>
    </ul>
    </div>

    <h3 class="section-header">ูููุฌูุงุช ุงูุชุนุงูู ูุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ:</h3>
    <div class="model-box">
    <ol>
        <li>ุงูููุงุฐุฌ ูุชุนุฏุฏุฉ ุงูุฃุจุนุงุฏ (Multidimensional Models):
            <ul>
                <li>ููุงุฐุฌ ุงูุนูุงูู ุงูุฏููุงููููุฉ (DFM - Dynamic Factor Models)</li>
                <li>ููุงุฐุฌ ูุชุฌู ุงูุงูุญุฏุงุฑ ุงูุฐุงุชู ุงูุนุงูููุฉ (GVAR - Global VAR)</li>
                <li>ููุงุฐุฌ ุงูุดุจูุงุช (Network Models)</li>
            </ul>
        </li>
        <li>ูููุฌูุงุช ุงูุฏูุฌ (Integration Methodologies):
            <ul>
                <li>ุงูุฏูุฌ ุงููุชุณูุณู (Sequential Integration): ุชุทุจูู ุนุฏุฉ ูููุฌูุงุช ุจุดูู ูุชุชุงูู</li>
                <li>ุงูุฏูุฌ ุงููุชูุงุฒู (Parallel Integration): ุชุทุจูู ุนุฏุฉ ูููุฌูุงุช ุจุดูู ูุชูุงุฒ ุซู ุฏูุฌ ุงููุชุงุฆุฌ</li>
                <li>ุงูุฏูุฌ ุงููุฑูู (Hierarchical Integration): ุชุทุจูู ูููุฌูุงุช ุนูู ูุณุชููุงุช ูุฎุชููุฉ ูู ุงูุชุญููู</li>
            </ul>
        </li>
        <li>ููุงุฐุฌ ุชุฃุซูุฑ ุงูุงูุชุดุงุฑ (Spillover Effect Models):
            <ul>
                <li>ููุงุฐุฌ ุชุญููู ุงูุงูุชุดุงุฑ (Spillover Analysis)</li>
                <li>ููุงุฐุฌ ููู ุงูุนุฏูู (Contagion Models)</li>
                <li>ููุงุฐุฌ ุงูุงูุชุดุงุฑ ุงูุดุจูู (Network Diffusion Models)</li>
            </ul>
        </li>
    </ol>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููุฅุดูุงููุงุช ุงููุฏูุฌุฉ
	def create_integrated_issues_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงููุฎุทุท
		issues = [
			"ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ", "ุฅุดูุงููุฉ ุงูููุงุฑูุฉ", "ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช",
			"ุฅุดูุงููุฉ ุงูุณุจุจูุฉ", "ุฅุดูุงููุฉ ุงููุนุงููุฉ", "ุฅุดูุงููุฉ ุงูุชูุจุค",
			"ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงูุฃุฌู ุงููุตูุฑ"
		]

		integrated_issues = [
			"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูุฃุซุฑ ูุงูุณุจุจูุฉ",
			"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงููุญุฏุฏุงุช ูุงูุชูุจุค",
			"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูุฃุฌู ุงูุทููู ูุงููุนุงููุฉ",
			"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ุจูู ุงูููุงุฑูุฉ ูุงูุชุฃุซูุฑ",
			"ุงูุฅุดูุงููุฉ ุงููุฏูุฌุฉ ูุชุนุฏุฏุฉ ุงูุฃุจุนุงุฏ"
		]

		# ุฅูุดุงุก ุงููุตูููุฉ ูุชุญุฏูุฏ ุงูุนูุงูุงุช
		matrix = np.zeros((len(issues), len(integrated_issues)))

		# ุชุนููู ุงูุนูุงูุงุช ุจูู ุงูุฅุดูุงููุงุช ุงูุฃุณุงุณูุฉ ูุงููุฏูุฌุฉ
		matrix[0, 0] = 1  # ุงูุฃุซุฑ ูุงูุณุจุจูุฉ
		matrix[3, 0] = 1

		matrix[2, 1] = 1  # ุงููุญุฏุฏุงุช ูุงูุชูุจุค
		matrix[5, 1] = 1

		matrix[6, 2] = 1  # ุงูุฃุฌู ุงูุทููู ูุงููุนุงููุฉ
		matrix[4, 2] = 1

		matrix[1, 3] = 1  # ุงูููุงุฑูุฉ ูุงูุชุฃุซูุฑ
		matrix[0, 3] = 1

		# ุงูุฅุดูุงููุฉ ูุชุนุฏุฏุฉ ุงูุฃุจุนุงุฏ ุชุดูู ุงูุฌููุน
		for i in range(len(issues)):
			matrix[i, 4] = 0.5

		fig = go.Figure(data=go.Heatmap(
			z=matrix,
			x=integrated_issues,
			y=issues,
			colorscale='YlGnBu',
			showscale=False,
			hoverongaps=False
		))

		fig.update_layout(
			title="<b>ุงูุนูุงูุงุช ุจูู ุงูุฅุดูุงููุงุช ุงูุฃุณุงุณูุฉ ูุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ</b>",
			height=500,
			font=dict(
				family="Arial",
				size=14
			),
			margin=dict(l=10, r=10, t=50, b=10)
		)

		return fig


	# ุนุฑุถ ูุฎุทุท ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ
	st.plotly_chart(create_integrated_issues_chart(), use_container_width=True)


	# ุฅูุดุงุก ุฑุณู ุจูุงูู ููููุฐุฌ ุดุจูู ูุชุนุฏุฏ ุงูุฃุจุนุงุฏ
	def create_network_model_chart():
		# ุฅูุดุงุก ุจูุงูุงุช ุงููุฎุทุท
		G = nx.DiGraph()

		# ุฅุถุงูุฉ ุงูุนูุฏ
		countries = ["ุฏููุฉ A", "ุฏููุฉ B", "ุฏููุฉ C", "ุฏููุฉ D", "ุฏููุฉ E"]
		sectors = ["ูุทุงุน ูุงูู", "ูุทุงุน ุตูุงุนู", "ูุทุงุน ุฎุฏูู"]

		# ุฅุถุงูุฉ ุงูุนูุฏ ููุฏูู ูุงููุทุงุนุงุช
		for country in countries:
			G.add_node(country, type="country")

		for sector in sectors:
			G.add_node(sector, type="sector")

		# ุฅุถุงูุฉ ุงูุฑูุงุจุท ุจูู ุงูุฏูู
		G.add_edge("ุฏููุฉ A", "ุฏููุฉ B", weight=0.7)
		G.add_edge("ุฏููุฉ A", "ุฏููุฉ C", weight=0.5)
		G.add_edge("ุฏููุฉ B", "ุฏููุฉ D", weight=0.6)
		G.add_edge("ุฏููุฉ C", "ุฏููุฉ E", weight=0.4)
		G.add_edge("ุฏููุฉ D", "ุฏููุฉ E", weight=0.8)

		# ุฅุถุงูุฉ ุงูุฑูุงุจุท ุจูู ุงูุฏูู ูุงููุทุงุนุงุช
		G.add_edge("ุฏููุฉ A", "ูุทุงุน ูุงูู", weight=0.9)
		G.add_edge("ุฏููุฉ B", "ูุทุงุน ุตูุงุนู", weight=0.8)
		G.add_edge("ุฏููุฉ C", "ูุทุงุน ุฎุฏูู", weight=0.7)
		G.add_edge("ุฏููุฉ D", "ูุทุงุน ูุงูู", weight=0.6)
		G.add_edge("ุฏููุฉ E", "ูุทุงุน ุตูุงุนู", weight=0.5)

		# ุฅุถุงูุฉ ุงูุฑูุงุจุท ุจูู ุงููุทุงุนุงุช
		G.add_edge("ูุทุงุน ูุงูู", "ูุทุงุน ุตูุงุนู", weight=0.4)
		G.add_edge("ูุทุงุน ุตูุงุนู", "ูุทุงุน ุฎุฏูู", weight=0.3)

		# ุงุณุชุฎุฏุงู ุฎูุงุฑุฒููุฉ ุชุฎุทูุท spring_layout ูุชุญุฏูุฏ ููุงูุน ุงูุนูุฏ
		pos = nx.spring_layout(G, seed=42)

		# ุฅูุดุงุก ููุงุฆู ููุฑุณู
		edge_x = []
		edge_y = []
		edge_weights = []

		for edge in G.edges(data=True):
			x0, y0 = pos[edge[0]]
			x1, y1 = pos[edge[1]]
			edge_x.extend([x0, x1, None])
			edge_y.extend([y0, y1, None])
			edge_weights.append(edge[2]['weight'])

		edge_trace = go.Scatter(
			x=edge_x, y=edge_y,
			line=dict(width=1, color='#888'),
			hoverinfo='none',
			mode='lines')

		node_x = []
		node_y = []
		node_text = []
		node_colors = []
		node_sizes = []

		for node in G.nodes(data=True):
			x, y = pos[node[0]]
			node_x.append(x)
			node_y.append(y)
			node_text.append(node[0])

			if node[1]['type'] == "country":
				node_colors.append('#FF9671')
				node_sizes.append(20)
			else:
				node_colors.append('#6495ED')
				node_sizes.append(15)

		node_trace = go.Scatter(
			x=node_x, y=node_y,
			mode='markers+text',
			text=node_text,
			textposition="top center",
			marker=dict(
				showscale=False,
				color=node_colors,
				size=node_sizes,
				line_width=2))

		fig = go.Figure(data=[edge_trace, node_trace],
						layout=go.Layout(
							title="<b>ูุซุงู ุนูู ูููุฐุฌ ุดุจูู ูุชุนุฏุฏ ุงูุฃุจุนุงุฏ (ุฏูู ููุทุงุนุงุช)</b>",
							titlefont_size=16,
							showlegend=False,
							hovermode='closest',
							margin=dict(b=20, l=5, r=5, t=40),
							xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
							yaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
							height=500,
							plot_bgcolor='rgba(0,0,0,0)'
						))

		return fig


	# ุนุฑุถ ูุฎุทุท ุงููููุฐุฌ ุงูุดุจูู ูุชุนุฏุฏ ุงูุฃุจุนุงุฏ
	st.plotly_chart(create_network_model_chart(), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฎุทูุงุช ุงูุชุนุงูู ูุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ:</h3>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

	# ุนุฑุถ ูุฎุทุท ุฎุทูุงุช ุงูุชุนุงูู ูุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ
	integrated_steps = [
		"ุชุญุฏูุฏ ุงูุฅุดูุงููุงุช ุงููุฎุชููุฉ ุงูุชู ุชุชุถูููุง ุงูุฏุฑุงุณุฉ",
		"ุชุญููู ุงูุนูุงูุงุช ูุงูุชูุงุนูุงุช ุจูู ุงูุฅุดูุงููุงุช",
		"ุงุฎุชูุงุฑ ุงููููุฌูุฉ ุงูููุงุณุจุฉ ููุชุนุงูู ูุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ",
		"ุชุญุฏูุฏ ุชุณูุณู ุงูุชุญููู ุฃู ูููููุฉ ุงูุฏูุฌ",
		"ุฌูุน ูุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงูููุงุณุจุฉ",
		"ุชุทุจูู ุงูููุงุฐุฌ ูุงูุชูููุงุช ุงููุฎุชููุฉ",
		"ุฏูุฌ ุงููุชุงุฆุฌ ูุชุญููููุง ุจุดูู ูุชูุงูู",
		"ุงุณุชุฎูุงุต ุงูุงุณุชูุชุงุฌุงุช ูุงูุชูุตูุงุช"
	]

	st.plotly_chart(create_process_flow(integrated_steps), use_container_width=True)

	st.markdown('<div class="rtl">', unsafe_allow_html=True)
	st.markdown("""
    <h3 class="section-header">ุฃูุซูุฉ ุนูู ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ:</h3>
    <div class="model-box">
    <ol>
        <li>ุฏุฑุงุณุฉ ุชุฃุซูุฑ ุงูุณูุงุณุฉ ุงูููุฏูุฉ ุนูู ุงูููู ุงูุงูุชุตุงุฏู:
            <ul>
                <li>ุฅุดูุงููุฉ ุงูุฃุซุฑ ูุงูุชุฃุซูุฑ: ููุงุณ ุชุฃุซูุฑ ุงูุณูุงุณุฉ ุงูููุฏูุฉ ุนูู ุงูููู</li>
                <li>ุฅุดูุงููุฉ ุงูุฃุฌู ุงูุทููู ูุงููุตูุฑ: ุชุญููู ุงูุขุซุงุฑ ูู ุงูุฃุฌู ุงููุตูุฑ ูุงูุทููู</li>
                <li>ุฅุดูุงููุฉ ุงููุนุงููุฉ: ุชูููู ูุนุงููุฉ ุงูุณูุงุณุฉ ุงูููุฏูุฉ ูู ุชุญููู ุฃูุฏุงููุง</li>
            </ul>
        </li>
        <li>ุฏุฑุงุณุฉ ุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ ุจูู ุงูุฏูู:
            <ul>
                <li>ุฅุดูุงููุฉ ุงูููุงุฑูุฉ: ููุงุฑูุฉ ุงูุชุฏููุงุช ุงูุชุฌุงุฑูุฉ ุจูู ุงูุฏูู</li>
                <li>ุฅุดูุงููุฉ ุงูุณุจุจูุฉ: ุชุญุฏูุฏ ุงุชุฌุงู ุงูุณุจุจูุฉ ูู ุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ</li>
                <li>ุฅุดูุงููุฉ ุงูุชูุจุค: ุงูุชูุจุค ุจุชุทูุฑ ุงูุนูุงูุงุช ุงูุชุฌุงุฑูุฉ ุงููุณุชูุจููุฉ</li>
            </ul>
        </li>
        <li>ุชุญููู ุฃุฒูุฉ ูุงููุฉ ุนุงูููุฉ:
            <ul>
                <li>ุฅุดูุงููุฉ ุงููุญุฏุฏุงุช: ุชุญุฏูุฏ ุฃุณุจุงุจ ูุนูุงูู ุงูุฃุฒูุฉ</li>
                <li>ุฅุดูุงููุฉ ุชุฃุซูุฑ ุงูุงูุชุดุงุฑ: ุฏุฑุงุณุฉ ุงูุชุดุงุฑ ุงูุฃุฒูุฉ ุนุจุฑ ุงูุฏูู ูุงููุทุงุนุงุช</li>
                <li>ุฅุดูุงููุฉ ุงููุนุงููุฉ: ุชูููู ูุนุงููุฉ ุณูุงุณุงุช ุงูุงุณุชุฌุงุจุฉ ููุฃุฒูุฉ</li>
            </ul>
        </li>
    </ol>
    </div>

    <h3 class="section-header">ุชุญุฏูุงุช ุงูุชุนุงูู ูุน ุงูุฅุดูุงููุงุช ุงููุฏูุฌุฉ:</h3>
    <div class="model-box">
    <ul>
        <li>ุชุนููุฏ ุงูููุงุฐุฌ ูุงููููุฌูุงุช ุงููุณุชุฎุฏูุฉ</li>
        <li>ุตุนูุจุฉ ุฌูุน ูุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงูููุงุณุจุฉ ููู ุฅุดูุงููุฉ</li>
        <li>ุงูุชุนุงูู ูุน ุงูุนูุงูุงุช ุงููุชุฏุงุฎูุฉ ุจูู ุงูุฅุดูุงููุงุช</li>
        <li>ุตุนูุจุฉ ุชูุณูุฑ ุงููุชุงุฆุฌ ุจุดูู ูุชูุงูู</li>
        <li>ุงูุญุงุฌุฉ ุฅูู ูุนุฑูุฉ ูุงุณุนุฉ ุจูุฎุชูู ุงููููุฌูุงุช ูุงูููุงุฐุฌ</li>
        <li>ุงูุชูุงุฒู ุจูู ุงูุนูู ูุงูุดููููุฉ ูู ุงูุชุญููู</li>
    </ul>
    </div>
    """, unsafe_allow_html=True)
	st.markdown('</div>', unsafe_allow_html=True)

# ุฅุถุงูุฉ ุงูุชุฐููู
st.markdown("""
<style>
.footer {
    position: relative;
    left: 0;
    bottom: 0;
    width: 100%;
    background-color: #F5F5F5;
    color: #1E3D59;
    text-align: center;
    padding: 10px;
    margin-top: 50px;
    border-radius: 10px;
}
</style>
<div class="footer">
    <p>ยฉ 2025 ูุฎุทุท ูุนุงูุฌุฉ ุงูุฅุดูุงููุงุช ูู ุงูุฏุฑุงุณุงุช ุงูููุงุณูุฉ - ุงูุฏูุชูุฑ ูุฑูุงู ุฑูุฏุงู</p>
</div>
""", unsafe_allow_html=True)